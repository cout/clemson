%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: thesis.dvi
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter -o /home/cout/files/thesis/thesis.ps
%+ thesis.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.12.15:1200
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (thesis.dvi)
@start
%DVIPSBitmapFont: Fa cmr7 7 2
/Fa 2 51 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr10 10 8
/Fb 8 62 df<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B
120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A2
6C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40
D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<EB01C013031307131F13
FFB5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>49 D<EB0FF0EB7FFE48B57E
3903E03FE0390F000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA5
6CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A
495A495A91C8FC011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A48
5CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E
0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB
1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F8048
7EA416C049137F007F1580007EC7FC0070ECFF006C495A121E390F8003F83907F00FF000
01B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114031407A2140F
141F141B14331473146314C313011483EB030313071306130C131C131813301370136013
C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B5
12F8A325397EB82A>I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC
38067FE090C9FCABEB07F8EB3FFE9038780F803907E007E090388003F0496C7E12066E7E
C87EA28181A21680A4123E127F487EA490C71300485C12E000605C12700030495A00385C
6C1303001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A7CB72A>I<00
7FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 10 9
/Fc 9 108 df<0060150600F8150F6C151F007E153F6C157E6C6C14FC6C6CEB01F86C6C
EB03F06C6CEB07E06C6CEB0FC06C6CEB1F80017EEB3F006D137E6D6C5A90380FC1F89038
07E3F0903803F7E06DB45A6D5B6EC7FCA24A7E497F903803F7E0903807E3F090380FC1F8
90381F80FC90383F007E017E7F49EB1F804848EB0FC04848EB07E04848EB03F04848EB01
F84848EB00FC48C8127E007E153F48151F48150F00601506282874A841>2
D<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA96C14FCA36C
14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D<020FB6128091B712C01303010F1680D91FF8C9FCEB7F8001FECAFCEA01F8485A485A48
5A5B48CBFCA2123EA25AA2127812F8A25AA87EA21278127CA27EA27EA26C7E7F6C7E6C7E
6C7EEA00FEEB7F80EB1FF86DB71280010316C01300020F158091CAFCAE001FB812804817
C0A26C1780324479B441>18 D<1478A414F85CA213015C1303495AA2495A49CCFC5B137E
5B485A485AEA0FE0003FBA12FEBCFCA2003F19FED80FE0CCFCEA03F06C7E6C7E137E7F7F
6D7E6D7EA26D7E1301801300A2801478A4482C7BAA53>32 D<156015F0A21401EB07F190
383FFFE0EB7C1FEBF00748486C5AD803C07F4848487ED80F007FA248497E001E14BC153C
003E143E141FA248EB1E1F143EA2143CA2147C00FC1580147814F8A214F0A21301A214E0
1303A214C0A21307A21480A2130FA214005B007C1500131EA2D87E3E5BA2D83E3C133E13
7CA21378001F5C13F8000F14784913F800075C0003495AEBE0033901F007802603FC1FC7
FCEBFFFEEBC7F0D807C0C8FCA25BA26CC9FC21477CBF2A>59 D<0060161800F0163CB3B2
6C167CA2007C16F8A26CED01F0003F15036C6CEC07E06C6CEC0FC0D807F0EC3F80D803FE
903801FF003A00FFC00FFC6DB55A011F14E0010391C7FC9038007FF82E347CB137>91
D<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03
F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D
7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F
80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C13
0F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD2A>I<007013
1C00F0131EB3B3B3B3A80070131C175277BD2A>107 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi10 10 15
/Fd 15 122 df<121C127FEAFF80A5EA7F00121C0909798817>58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07
FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007F
C0EE1FF0EE07FCEE01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC0
4B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0
EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>62
D<9339FF8001C0030F13E0037F9038F80380913A01FF807E07913A07F8000F0FDA1FE0EB
079FDA3F80903803BF0002FFC76CB4FCD901FC80495A4948157E495A495A4948153E017F
163C49C9FC5B1201484816385B1207485A1830121F4993C7FCA2485AA3127F5BA312FF90
CCFCA41703A25F1706A26C160E170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A16076C6C02
0EC8FC6C6C143C6C6C5C6CB4495A90393FE00FC0010FB5C9FC010313FC9038007FC03A3D
7CBA3B>67 D<0103B812F05BA290260007F8C7123F4B1407F003E0020F150118005DA214
1FA25D19C0143FA24B1330A2027F1470190092C7126017E05C16014A495A160F49B6FCA2
5F9138FC000F01031407A24A6DC8FCA201075C18034A130660010F160693C7FC4A150E18
0C011F161C18184A1538A2013F5E18F04A4A5AA2017F15074D5A91C8123F49913803FF80
B9FCA295C7FC3C397DB83D>69 D<DCFF8013E0030F13F0037F9038FC01C0913A01FF803E
03913A07FC000F07DA0FE0EB038FDA3FC0903801DF804AC812FFEB01FED903F8157F4948
ED3F00495A495A494881017F161E49C9FC5B12014848161C5B1207485A1818121F4993C7
FCA2485AA3127F5BA312FF90CCFC93387FFFFE93B5FCA29338007FC0715A177F95C7FCA2
7E5F5F7F123F16016C7E5F6C6C14036D14071207D803FCEC1EF86C6C143C26007F80EBF0
7890393FF007E0010FB5EA8030010349C9FC9038003FE03B3D7DBA41>71
D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027EEB01FE02F813
00495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094C7FC80806D7E
14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F03037F1500167F16
3F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F4A5A6D495A6D
EB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC313D7CBA33>
83 D<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7007F141C121E
001C92C7FCA2485CA200305C007017180060130112E0485CA21403C716005DA21407A25D
A2140FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25C
EB0FFC003FB6FC5AA237397EB831>I<267FFFFC91383FFFC0B55DA2000390C83807FC00
6C48ED03E06060000094C7FC5F17065FA25F6D5DA26D5D17E05F4C5AA24CC8FC6E1306A2
013F5C161C16185EA25E6E5BA2011F495A150393C9FC1506A25D6E5AA2010F5B15701560
5DA2ECE18002E3CAFC14F3EB07F614FE5C5CA25C5CA26D5AA25C91CBFC3A3B7CB830>86
D<277FFFFC01B500F890B51280B5FC60000390C7D807FCC7380FF80001FC4BEC03E00001
6204035E98C7FC621A0604075DA2040F5DA2041B5D6216336D02735D1663000003C34A5A
83DB01834AC8FC04815CDB0301140603075D1506030C5DA203185D197003301560611560
6D01E04A5A15C090267F01804AC9FC17FEDA030014060400130E0206150C020E5D140C4A
5DA24A5D18E04A5D715A5C4A92CAFCA26DC85AA2013E157C1778133C1770133801301560
513B7CB84E>I<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC1700161C4A48
C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92C8FCA4
5C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9FC131E
12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>102 D<01F8EB03C0D803FEEB07E0D807
0F130F000E018013F0121C12180038140700301403D8701F130112601500D8E03F14E000
C090C7FC5BEA007E16C013FE5B1501000115805B150316001203495B1506150E150C151C
151815385D00015C6D485A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>118
D<01F816F0D803FE9138E001F8D8070F903801F003000ED9800314FC121C121800380207
13010030EDE000D8701F167C1260030F143CD8E03F163800C001005B5BD8007E131F1830
01FE5C5B033F1470000117604991C7FCA218E000034A14C049137E17011880170318005F
03FE1306170E000101015C01F801BF5B3B00FC039F8070903A7E0F0FC0E0903A1FFC03FF
C0902703F0007FC7FC36267EA43B>I<903907E001F090391FF807FC9039783E0E0F9039
E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F13
3C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E15
18003F5BD87F81143801835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0F
C7FC391FF00FFC3907C003F029267EA42F>I<13F8D803FE1470D8070F14F8000EEB8001
121C121800381403003015F0EA701F1260013F130700E0010013E012C05BD8007E130F16
C013FE5B151F000115805BA2153F000315005BA25D157EA315FE5D1401000113033800F8
0790387C1FF8EB3FF9EB0FE1EB00035DA2000E1307D83F805B007F495AA24A5A92C7FCEB
003E007C5B00705B6C485A381E07C06CB4C8FCEA01FC25367EA429>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe ecti1000 10 38
/Fe 38 122 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>28 D<EA03C0EA07F0120F121F13F8A313F0EA07B0EA003013701360A213E013C012
01EA038013005A120E5A5A5A5A5A0D197A8819>44 D<387FFFF8A2B5FCA214F015057994
1E>I<EE01C01603A21607160FA2161F83163FA2167F16FF16EF150116CFED038FA2ED07
0FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC0700A2140EA25CA25C
027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B130E5BA25B13781370
13F0487ED807FC4A7EB56C48B512F0A3343C7BBB3E>65 D<0107B612FCEFFF8018C0903B
000FF0001FF04BEB07F81703021F15FC17014B14FEA2023F1400A24B1301A2147F18FC92
C7120318F84A140718F04AEC0FE0EF1FC00101ED3F80EF7F004AEB01FEEE07F849B612E0
5F9139F80007F0EE01FC01076E7E177F4AEC3F80A2010F16C0171F5CA2131F173F5CA213
3FEF7F805C1800017F5D4C5A91C7485A5F49140FEE1FE0494A5A00014AB45AB748C7FC16
F816C037397BB83A>I<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF0
00787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C
49C813E05B485A5B000317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CB
FCA41738A217784816707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F
5D6D5C6C6C495A6C6CEB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9
FC373D74BA3B>I<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F15
7FF03F804B141F19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2
130119E04A151FA2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A6001
1F15034D5A4A5D4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B4
5A007F90B548C8FCB712F016803C397CB83F>I<0107B8FCA3903A000FF000034BEB007F
183E141F181E5DA2143FA25D181C147FA29238000380A24A130718004A91C7FC5E13015E
4A133E167E49B512FEA25EECF8000107147C163C4A1338A2010F147818E04A1370170101
1F16C016004A14031880013F150718004A5CA2017F151E173E91C8123C177C4915FC4C5A
4914070001ED7FF0B8FCA25F38397BB838>I<DB03FE130E92393FFF801E92B5EAE03C91
3903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB03FC494814074948
15F049481403495A5C49C813E05B485A5B000317C0485AA2485A1880485A94C7FCA2485A
A3127F5BA312FF90CBFC0307B512E0A392390007FC00705A16075FA36C150F5FA36C6C14
1F5F121F6D143F6C7E4C5A6C6C14FF6C6CEB03EFD801FEEB07C728007FC03F07C7FC9039
3FFFFC03010F01F0C8FC01001380373D74BA40>71 D<0103B512F8A390390007F8005DA2
140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA2
1307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397CB8
20>73 D<0207B512F0A391390007FC006F5AA215075EA3150F5EA3151F5EA3153F5EA315
7F93C7FCA35D5DA314015DA314035DA31407A25DA2140FA2003F5C5A141F485CA24A5A12
FC00E049C8FC14FE00705B495A6C485A381E0FC06CB4C9FCEA01F82C3B78B82C>I<9026
07FFF8923807FFF0614F13E0D9000FEFF0004F5AA2021F167FF1EFC0141DDA1CFCEC01CF
023C16DF9538039F800238ED071FA20278ED0E3F97C7FC0270151CA202F04B5AF0707E14
E0037E14E0010117FE4D485A02C0EC0380A20103ED0701610280140EA20107ED1C030538
5B14006F137049160705E05B010EEC01C0A2011E913803800F61011CEC0700A2013C020E
131F4C5C1338ED1FB80178163F04F091C8FC01705CA201F04A5B187E00015DD807F816FE
B500C09039007FFFFC151E150E4C397AB84A>77 D<92383FC00E913901FFF01C020713FC
91391FC07E3C91393F001F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA201
1F15E091C7FCA34915C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E001
0080023F7F14079138007FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A
5AA24B5AA2007F4A5A4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F
138026C003FCC8FC2F3D7ABA2F>83 D<0007B812E0A25AD9F800EB001F01C049EB07C048
5AD900011403121E001C5C003C17801403123800785C00701607140700F01700485CA214
0FC792C7FC5DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A2
5CA21307A25CA2130FA25CEB3FF0007FB512F8B6FCA2333971B83B>I<003FB539800FFF
FEA326007F80C7EA7F8091C8EA3F00173E49153CA2491538A20001167817705BA2000316
F05F5BA2000715015F5BA2000F15035F5BA2001F150794C7FC5BA2003F5D160E5BA2007F
151E161C90C8FCA2163C4815385A16781670A216F04B5A5E1503007E4A5A4BC8FC150E6C
143E6C6C5B15F0390FC003E03907F01FC00001B5C9FC38007FFCEB1FE0373B70B83E>I<
B5D8F80FB590381FFFF06102F018E0D807FEC7D87FE0903803FE00D803F8DA3F806D5AF1
00F0A24F5A621903621907047F92C7FC190E16FF4B5DA2DB03BF5C7F0001DA073F5CA203
0E5D83DB1C1F495A180303385D4EC8FC157003F0140E15E0DA01C05CA2DA03805CA2DA07
005CA2020E5D17C14A5DEFC3805C027802C7C9FC14704A14CE13FE6C6C4814DCA24A14F8
A291C75B160F495D5F5B5F5B4992CAFCA249140E4C3B6FB853>87
D<14F8EB07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F
5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F15
87007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677
A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE
9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A
127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03
E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E0
90381F0070017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC48
5AA2127F90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F80
6CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507
A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF
017C5BEBF80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA21407
5A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B90
38038F8E391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380F
C1E090383F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F
80397F81FF00EBFFF8148090C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0
EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0
ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D01
0FB512C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075C
A4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F
80264C82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80
011F1307D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F1207491400
A25DA249137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380F
C3F0EB00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0
381FFF80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3
133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C0
5B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F816
3C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E380489038
00FF000038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13
F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A2
5B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8
EA01E0143879B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA3
5B017EEB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF838
91383003800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FC
EBC07E147F80001F809039801F81C0A21583003F013F138001001303A21507481500007E
133EEC1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>107
D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA212
03A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131E
EAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>I<D801E001FEEB
07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C
383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E
5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C120349DA800113
1C18F8033F153C00070403133849020013F0A24B1570000F17E049017E15F019E003FEEC
E1C0001FEE01E34949903800FF000007C70038143C3E2679A444>I<D801E013FE3A07F8
03FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0007813C00070811480
4A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12034990383F8380
160316070007027F130049137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE000
07C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F00F8017E137C5B4848
137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115
FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F0
3803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF090393CF0787C903938
F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA2
5CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7
FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512
C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F803838
3FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA3
12075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F
121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E12015B15
1E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F8
3CEB7FF8EB0FC0212679A426>I<903907E007C090391FF81FF89039787C383C9038F03E
703A01E01EE0FE3803C01F018013C0D8070014FC481480000E1570023F1300001E91C7FC
121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016E0001C5B007E14010107
14C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C393FF03FF03907C00FC0
27267CA427>120 D<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F
4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D0003147E5BA215FE
00075C5BA214015DA314035D14070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F
5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E06C485A383C1F80D8
0FFEC8FCEA03F0233679A428>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ecbx1200 12 50
/Ff 50 122 df<ED0FFF4AB512C0020F14F0027F80903A01FFF803FC499038C000FE010F
EB00034948497E49485B5C495A4C138001FF6E13005CA3705AEE01F893C8FCA74BB51280
B9FCA5C69038E00003B3B0007FD9FFC1B6FCA538467EC53E>28 D<EA07C0EA1FF0487E48
7E487E7FA31480A37E7EEA1FF7EA07C7EA0007130FA21400A25B131E133EA25B13FC5B48
5A485A1207485A485A90C7FC120C112278C41F>39 D<EA07C0EA1FF0EA3FF8EA7FFCEAFF
FEA7EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F>46 D<EC03C01407141F147FEB03FF133F
B6FCA413C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B6
12E0000315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E0
01F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300
A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A49
4814F8D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17
C0A42D417BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807
E06D7E81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A
4B5A4A5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F
13C017E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C0
5BD83F80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC01
0113E02D427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715
C7EC0F87EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B
485A485A485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A53141
7DC038>I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8
FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E
01F06D13804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317
F05B5D6C4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEB
FFFC6CB612F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0
027F13FC49B6FC01079038807F8090390FFC001FD93FF014C04948137F4948EBFFE04849
5A5A1400485A120FA248486D13C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381F
FF8000FF017F13E091B512F89039F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C0
5B6F13E0A24915F0A317F85BA4127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D
4913806C018014006C6D485A6C9038E01FFC6DB55A011F5C010714C0010191C7FC903800
3FF02D427BC038>I<121E121F13FC90B712FEA45A17FC17F817F017E017C0A248168000
7EC8EA3F00007C157E5E00785D15014B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A
5A14035D14074A5AA2141F5D143FA2147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A
6D5A2F447AC238>I<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07
C0C7FCAEEA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F2C78AB
1F>58 D<903807FFC0013F13FC48B612804815E0260FF80013F0D81FC0EB3FF848C7EA1F
FC4815FE01C0130F486C14FF7FA66C485B6C4814FE000FC7FCC8EA3FFCED7FF8EDFFF04A
13E04A13801600EC07FC4A5A5D4A5A5D4A5A92C7FCA2147E147CA31478AA91C8FCA814F8
EB03FE497E497FA2497FA56D5BA26D90C7FC6D5AEB00F828467AC535>63
D<B9FC18F018FE727E19E026003FFCC700077F05017F716C7E727E727EA2721380A37213
C0A74E1380A24E1300A24E5A4E5A4E5A4D5B05075B94B5128091B700FCC7FC18F018FF19
E002FCC7000113F8716C7EF01FFE727E7213801AC07213E0A27213F0A31AF8A71AF0A260
1AE0604E13C0604E138095B5120005075BBA12F86119C04EC7FC18E045447CC350>66
D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949
C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F484916
1F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2
123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C
167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7
FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>I<B9FC18F018FE727E19
E026003FFEC7001F13F805017F9438003FFF060F7F727F727F727F84737E737EA2737EA2
737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F624F5A19FF624E5B0607
5B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9FC4B447CC356>I<BA12
F8A485D8001F90C71201EF003F180F180318011800A2197E193EA3191EA21778A285A405
F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E01778A2F103C0A494
C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBBFC61A443447DC3
4A>I<BA1280A419C026003FFEC7121F1701EF007F183F181F180F180719E01803A31801
A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F160F16071603A316
01A693C9FCAFB712F0A53C447CC346>I<DCFFF01470031F01FF14F04AB6EAE0010207ED
F803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E49
48814948814948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F
1801A34994C8FC12FFAD057FB612F0127F7FA3003FDC0001EBF000A27F7EA26C7FA26C7F
807E6C7F6C7F6D7E6D6C5D6D6C7E6D6D5C6D01F05C010101FE143F6D903AFFF001FF9F02
3F90B6120F0207EDFC030201EDF000DA001F02C01330030001FCC9FC4C467AC458>I<B7
D88003B612FEA526003FFEC9EBF800B3A791B9FCA54AC9FCB3AAB7D88003B612FEA54F44
7CC358>I<B76C0103B512F8A526003FFEC93807E0004F5A4F5A077EC7FC614E5A4E5A4E
5AF01F804EC8FC187E604D5AEF07F0EF0FC04D5A4DC9FC177E4C5AEE03F04C5A4C5A4C7E
EE7FF04C7E5D4B7F4B7F4B7FED3F3FDB7E1F7F03FC806E486C7F4B7E4B6C7F0380804B6C
7F4A7F717E84717F83717F85717F83717F85717F187F727E86727F84727F86727F84B76C
90B612FCA54E447CC358>75 D<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A3
60A2187EA218FE170117031707171F177FEE03FFB95AA539447CC343>I<B500FE067FB5
12806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA2
6E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC07
80A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F
6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705B
A2B6057FB6128071C7FCA2173E171C61447CC36A>I<923807FFC092B512FE0207ECFFC0
021F15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91FFC6E
6C7E49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13E0A2
4819F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19F8A2
6D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D
6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15F802
0715C002004AC8FC030713C047467AC454>79 D<B9FC18F018FE727E19E0D8001F90C700
0F7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E
5A4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>I<DAFF
E0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC000148
48EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D153C7F7F
6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C81011F
810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218007EA2
6C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FC
D8F80714FC48C614F0480107138031467AC43E>83 D<003FBA12E0A59026FE000FEB8003
D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819F84819
78A5C81700B3B3A20107B8FCA545437CC24E>I<B76C010FB512F8A526003FFEC93803E0
00B3B3A9011F17076280190F6D606F151F6D95C7FC6D6D5D197E6D6D5D6D6D1403DA7FFC
4A5A6EB4EC3FF0020F9039F003FFE06E90B61280020193C8FC6E6C14FC030F14E0922600
7FFEC9FC4D457CC356>I<B600FE017FB691B512FEA526007FFCC8D83FFEC9EA7C006E82
013F701778807415F86D705F6F7014016D705FA26F7014036D64814E6D14076D646F7014
0F6D041E94C7FCA26F023E6D5C6DDC3C7F151E81027F037C6D5CF0783F6F70147C023F4B
6C1578A26F01016F13F86E4B6C5D16806E02036F485A4E7E04C0EEE0036E4A486C5DA2DC
E00FEDF0076E4B6C5D16F06E4A6F48C8FC051E7F04F8705A6E4A027F131EA2DCFC7CEDFE
3E037F0178023F133C04FE16FF033F01F85E4D8004FF17F86F496E5BA36F496E5BA26F60
4D80A26F90C86C5BA36F486F90C9FCA26F48167EA30478163C6F457EC374>87
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0481380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEB
FFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13
F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03
F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFFE0137E
010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC4848
903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D6C6C
495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA47F7F
7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC0140748
48020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3FF83B
07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>I<EB7F
C0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F91
39DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<137C48
B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFF
A512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB3B3B3A3B61280A519457C
C420>108 D<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E00281
6E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C01
9E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA557
2D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F80
1F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC
3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848
C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F17
00A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F
90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590
B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15
C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E
4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FC
ADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1F
FE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A527
2D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48
C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC
6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA2
6C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FE
C7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90
B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391F
FC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA5
0003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C701
0F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E0903800
3E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D
92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E
5BA36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>I<B5D8FE1FB539801FFFF0A5
00019027C0003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403
013F6F5C6E013F1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E
15806D902681E07F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E
9039000FFDE018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B
143C4C2C7EAB51>I<B500FE90383FFFF0A5C601F0903803E0006D6C495A6D6C495A011F
4AC7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D
6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F4948
7E02C08049486C7F49C76C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B>I<B6
903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E13
03010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378ED
F8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14
015D001F1303D83F805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06C
B45A6C5B000790CAFCEA01FC36407EAB3B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg ecrm1000 10 79
/Fg 79 123 df<486C1360000314E039070001C0000EEB038048EB070000181306003813
0E0030130C0070131C00601318A200E01338481330A400CEEB338039FF803FE001C013F0
A3007F131FA2393F800FE0390E0003801C1981B91C>16 D<001C1307007FEB1FC039FF80
3FE0A201C013F0A3007F131F001CEB073000001300A400011470491360A2000314E090C7
12C048130100061480000E130348EB070048130E485B006013181C1980B91C>I<B81280
A2290280962A>21 D<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F90
3B1F8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8
A32801F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>27
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<121C127FEAFF80A213C0A3127F121C1200A412011380A212
0313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E
131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67E
A3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00
E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C13
3C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2
133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15
30B3A8B912FCA2C80030C8FCB3A836367BAF41>43 D<121C127FEAFF80A213C0A3127F12
1C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<B512FCA51605
7F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<EB03F8EB1FFF90387E0FC090
38F803E03901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A500
FE15E0B3007E15C0A4007F141F6C1580A36C1500A26C6C133EA26C6C5B6C6C5BEBF00139
00F803E090387E0FC0D91FFFC7FCEB03F823397DB62A>48 D<EB01C013031307131F13FF
B5FCA2131F1200B3B3A7497E007FB512F0A31C3779B62A>I<EB0FF0EB7FFE48B57E3903
E03FE0390F000FF0001E6D7E001C6D7E486D7E5A6E7E126012FE6CEC7F807FA56CC7FC12
1CC8FCEDFF00A25D14015D14035D4A5A4A5A5D4A5A4AC7FC147E5C495A14E0495A495A49
C8FC011EEB01805B5B49130348481400485A485A90C75A48B6FC5A5A485CB6FCA321377C
B62A>I<EB07F8EB3FFF90B512C03901F80FF03903C007F848486C7E390E0001FEEA0F80
391FE000FF7FA56C5A6C5AC7485AA25D14035D4A5A5DEC0F80027FC7FCEB1FFCECFF8090
38000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80A2487EA316C015
7F491480007EC7FC0070ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C90
C7FCEB0FF823397DB62A>I<1538A2157815F8A2140114031407A2140F141F141B143314
73146314C313011483EB030313071306130C131C131813301370136013C01201EA038013
005A120E120C5A123812305A12E0B712F8A3C73803F800AA4A7E0103B512F8A325387EB7
2A>I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9FC
AAEB07F8EB1FFE9038780F809038E007E03907C003F0496C7E130000066D7E81C8FC8181
A21680A4121C127F5A7FA390C713005D12FC00605C12704A5A6C5C6C1303001E495A6C6C
485A3907E03F800001B5C7FC38007FFCEB1FE021397CB62A>I<EC3FC0903801FFF00107
13FC90380FE03E90383F800790387E001F49EB3F804848137F485A12075B000FEC3F0049
131E001F91C7FC5B123FA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C
7E01607F01E0137E497F16805BED1FC0A390C713E0A57EA47F123F16C0A2001FEC3F807F
000F15006D5B000714FE6C6C5B6C6C485A3900FE07F090387FFFC0011F90C7FCEB03FC23
397DB62A>I<12301238123E003FB612E0A316C05A168016000070C712060060140E5D5D
00E014304814705D5DC712014A5A4AC7FC1406140E5CA25C1478147014F05C1301A21303
5C1307A2130FA3131F5CA2133FA5137FA96DC8FC131E233A7BB72A>I<EB03F8EB1FFF01
7F13C09038FC07F03901E001F83903C0007C4848133C90C7123E48141E000E141F001E80
A3121FA26D5B6D131E7FD80FF85B6D137C01FF13786C6D5A6CEBE3E0ECF780C601FFC7FC
6D5A6D6C7E010F13E0013F7F01F97F3901E07FFE48486C7E380F800F48486C1380001E01
0113C0487F007C143F0078EC1FE0150F00F81407481403A21501A36C15C0A20078140300
7C15806C14076CEC0F006C6C131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC
23397DB62A>I<EB03F8EB1FFF017F13C03901FC07E048486C7E3907E001F8000F6D7E48
48137E5B003F80A248C71380A25AED1FC0A516E0A56C143FA36C7E157F121F6C6C13FF6C
6C13DF000313013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FCA2153F1680A21600
5D120F486C137E486C5BA24A5A4A5A49485A381F000F001CEB1F80260F807FC7FC3807FF
FE000113F838003FC023397DB62A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F
EAFF80A5EA7F00121C092479A317>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F
EAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A3479
A317>I<EF01C0EF0780EF1E0017F8EE03E0040FC7FC163C16F0ED03C0030FC8FC153CEC
01F0EC07C0021EC9FC1478EB01E0EB0780011ECAFC13F8EA03E0000FCBFC123C12F0A212
3C120FEA03E0EA00F8131EEB0780EB01E0EB0078141EEC07C0EC01F0EC003C150FED03C0
ED00F0163C160FEE03E0EE00F8171EEF0780EF01C0322E79AB41>I<EB3FE03801FFFE39
07C03F80390E000FC0003CEB07F000301303007014F8007C130100FE14FC7EA4127E003C
EB03F8C7FCEC07F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C495A5CA249C7FCA31306
AA90C8FCA8130EEB3F80497EA56D5A010EC7FC1E3B7CBA27>63 D<1538A3157CA315FEA3
4A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202
707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010C
C7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B5
12FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E
707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE
1FE0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8
486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8
903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01
FE153F12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7
FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618
017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC
020F13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0
EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8
A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80
B8C7FC16F816C036397DB83F>I<B812FEA3000190388000076C90C8FC173F838383A383
A31880170116C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860
A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA33339
7EB838>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E
1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD
4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A
03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F4848
1507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0
EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90F
F8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7C
BA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6
486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A3
1A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A
1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B
>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A
4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E
4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707E
A2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C
90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D
397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7
F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C
1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3
ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED01
8045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCF
F8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED
7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1F
F6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA21706
37397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED9
3F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2
001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17
F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A
5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390
C8FC363D7BBA41>I<B712C016FC16FF0001D9800013C06C90C7EA1FE0707EEE03F88370
7EA2707EA21880A71800A24C5AA24C5A5FEE0FF04C5AEEFF8091B548C7FC16F091CAFCB3
A5487FB6FCA331397EB838>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0
707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E
9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01
071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>82
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A3006017
30A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B69038
07FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F
17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381F
FFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A30003018091380FFC00
6C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E140E011F150C80010F
5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383F
C006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C
5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5FCA3000790278000
1FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E
6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D
5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D
913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0F
FCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7E
B855>I<EAFFFCA2EAFC00B3B3B3B3A7EAFFFCA20E5379BD17>91
D<EAFFFCA21200B3B3B3B3A712FFA20E537FBD17>93 D<007FB81280B912C0A26C178032
04797041>95 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA2
6E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC
160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00F
E03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E0
3E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E
167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F0090
3881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F8
0070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12
FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E03900
7C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1F
FF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2
127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF
39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F8
03E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7
FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F01338
6C6C137090387E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380F
C1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB
487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C39
01F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C
485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE
6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C
15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7
FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039
F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<
EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312
387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301
B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B7
19>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A
4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E81
1400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3
120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8
913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D9
07F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<
3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E090
38F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0
A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F00
6C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000
FFEB7FF89038F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F84913
0116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C090
39F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D9
03F813C090381FFE0190387E07819038FC01C33903F000E3000714774848133749133F00
1F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF
3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>
I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038
FC0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E
003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037F
C67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E
38F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A31378A313F8120112031207
001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01
F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F
12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267E
A42E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C
1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F1
80A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260F
F8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC80
06156FA2017E9038EFC00C15C7171CD93F01EBE01815830281EBF038D91F831430150102
C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7
FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001
EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8
FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C13
7E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B53880
3FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D
5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA214
7CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5A
EA1FF0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0F
E012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290
387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03
FC90B5FCA21F247EA325>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecbx1000 10 40
/Fh 40 121 df<B61280A819087F9620>45 D<49B4FC011F13F0017F13FC9038FF83FE48
48C67E4848EB7F804848EB3FC04848EB1FE0A2001F15F0A24848EB0FF8A3007F15FCA400
FF15FEB3007F15FCA5003F15F86D131FA2001F15F0A26C6CEB3FE0000715C06C6CEB7F80
6C6CEBFF003900FF83FE6DB45A011F13F0010190C7FC27377CB530>48
D<141E143E14FE1307137FB5FCA3138FEA000FB3B3A5007FB61280A4213679B530>I<EB
0FFE90387FFFC048B512F0000714FC390FE03FFF261F800F1380263F000313C0D87F8014
E0EBE00100FF6D13F07FA2ED7FF8A46C5A6C5A0006C7FCC8FCEDFFF0A216E05C16C04A13
8016004A5A4A5AEC1FF05D4A5A4AC7FC14FE495AD903F01378495A495A495A49C712F801
7C14F05B49130148B6FC5A5A5A5A5A4815E0B7FCA425367BB530>I<EB03FF011F13F001
7F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF86D14F0487EA66C4814E0
6C5A6C485AC714C04A138016004A5A4A5AEC3FF090380FFFC05D15F090380007FE913801
FF806E13C016E0ED7FF016F8ED3FFCA216FEEA1FC0487E487E487EA416FCA249137F007F
15F801C0EBFFF06C5A6C6C4813E0260FFC0713806CB61200000114FC6C6C13F0010790C7
FC27377CB530>I<ED07C0150FA2151F153F157F15FF5CA25C5C5C5C143E143C5C5C1301
495A5C495A495A5B133E5B13785B485A1203485A5B48C7FC121E5A127C5AB81280A4C700
01EBC000AA0103B61280A429367DB530>I<001C15C0D81F80130701F8137F90B61280A2
16005D5D15F05D15804AC7FC14F090C9FCA7EB03FE90381FFFE0017F13F89038FE07FC90
38F003FFD9C0011380496C13C090C7FC000E15E0C8127F16F0A216F8A3121FEA3FC0487E
12FF7FA316F05B15FFD87F8014E0007EC713C0003E5B003F4913806C6C481300390FF01F
FE6CB512F8000114E06C6C1380D90FF8C7FC25377BB530>I<EC0FF8ECFFFE0103EBFF80
90390FF80FC090393FE003E090397F8001F09038FF000F48EC1FF84848133F485A120F5B
121FA2003FEC1FF0ED0FE0484890C7FCA31408EC7FF039FFF1FFFC01F313FFD9F7801380
9039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA4127FA5123F16FCA26C7E16F8
000F143F6D14F0000715E06C6CEB7FC03A01FF81FF806C90B51200013F13FC010F13F001
01138027377CB530>I<123C123EEA3FE090B71280A41700485D5E5E5E5EA2007CC7EA0F
C000784A5A4BC7FC00F8147E485C5D14014A5AC7485A4A5AA24A5A143F4AC8FCA214FEA2
13015C1303A21307A2130F5CA2131FA5133FA96D5A6D5A6D5A29397BB730>I<ED03E04B
7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A202078015C0020F80
ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7FA20101824A7F49B7
7EA3498202C0C7FC010F824A147FA2011F8291C8123F4982013E151FA2017E82017C8101
FE83B500F80107B61280A4413A7DB948>65 D<DB3FFCEB01C00203B5EAC003021FECF007
91B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF08049488048
5B48177F4849153F4890C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD127F7F
F003C0123FA27F001F1707A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D
6D6C4A5A6DB44A5A010701C0EB0FE06D01FCEBFF80010090B548C7FC021F14F8020314E0
9126003FFEC8FC3A3B7BB945>67 D<B912C0A43A007FF800039338007FE0171F170F1707
A21703A21701A318F0EE7800A41800A216F8A21501150791B5FCA4ECF80715011500A216
78A693C8FCADB7FCA434397DB83C>70 D<B612FCA439007FF800B3B3ADB612FCA41E397D
B824>73 D<010FB612C0A4D90001EBE000B3B3EA0F80EA3FE0EA7FF0A2EAFFF8A35E5C13
F0007F495BD83FE091C7FC391F800FFE390FF03FFC6CB512F0000114C026003FFCC8FC2A
3A7FB831>I<EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FFD91FFC01
0113C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F1380A248
486F13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D00
1F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6DB4
01075B0107D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB948
>79 D<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1F
FEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002F8C9
FCB3A4B612FCA438397DB841>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F70
7F717E717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E08391
39F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600
FC011F130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB848>82
D<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F
48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014
FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC007F03
0F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F81303
9039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>I<003F
B91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200781703
A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>I<EB3FFE0003B512E000
0F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF01
0FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF6D5A127F263F
F00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA42E>97
D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDAF00013804AEB7FC002
80EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A217F06E133F6EEB7FE0
6E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13E0D9C00390C7FC2F3A
7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE0013C048485AEA0FF812
1F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123FED01E06C7E15036C6C
EB07C06C6C14806C6C131FC69038C07E006DB45A010F13F00101138023257DA42A>I<EE
7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC07F0003EB001FD807FC
1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C6C5B6C6C
4913C02701FF80FD13FE39007FFFF9011F13E1010113012F3A7DB935>I<903803FF8001
1F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003FEC0F
F0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D14F0
00071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C>I<EC
1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0A2481381A24813016E
1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7DB91D>I<161FD907FE
EBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F003F15CF4990
387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE07FE48B512F8
6D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C15F86C816C81
5A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C495AD81FF0EB
07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>I<13FFB5FCA41207
7EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E4A14C05CA25CA291
C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2487EA56C5AA26C5AEA
01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<141FEC7FC0ECFFE0A249
13F0A56D13E0A2EC7FC0EC1F0091C7FCA9EC0FF0EB0FFFA4EB007F143FB3B0121FEA3F80
EA7FC0EAFFE0EC7FE0A215C014FF6C481380903883FE006CB45A000F13F0000113801C4B
86BA1D>I<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>108
D<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F0
3FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291
C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF903803FFF8020F
13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC
3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE04848
6D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D6D13
07001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029
257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF00113800003496C13
C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F
6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCAC
B512FCA42F357EA435>I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC00007
5B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114
D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C130012FC15787E
7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE
140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B512C000F81400
38E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7
FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>
I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90
387FFFFC011F13F00103138030257DA435>I<B500F1B538803FFFA43D07FE000FF80003
E06C6C010715C082028015076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90
273FF01E7F5B17C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139
FEF00FF10107EDF9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5C
A2023E147C023C143C40257EA445>119 D<B539F01FFFF0A4000390398003F8006C01C0
13E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B
6D5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E01
3E80496D7E49130F00016E7EB590383FFFF8A42D257EA432>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecbx1440 14.4 36
/Fi 36 118 df<B712E0AB230B7F9F2C>45 D<151E153E15FE1403140F147FEB07FF0003
B5FCB6FCA3EBF87FEAFC00C7FCB3B3B3A6007FB712FCA52E4E76CD42>49
D<EC1FFE49B512F0010F14FC013FECFF804915E02701FF803F7F2703FC000713FCD807F0
01017F48486D7FD81F806E138048C87E7013C0D87FE016E001F8806D16F000FF817F7013
F8A56C5AA26C5A6C5AEA0380C914F05EA218E05E18C05E18804C13005F4C5A4C5A5F4B5B
4B5B4B5B94C7FCED0FFC4B5A4B5AED7FC04B5A4A90C8FCEC03FC4A5A4A4814F84A5A4A5A
4AC8FC02FEEC01F0495A495A495A5CD90F80140349C8FC013E1507017FB7FC90B812E05A
5A5A5A5A5A5AB9FC18C0A4354E7ACD42>I<913807FFC0027F13FC0103B67E010F15E090
261FF80313F890267FC0007F01FEC7EA3FFE48488148486E138013FE486C6C6D13C08048
17E080A66C5B18C06C5B6C90C75AD80038168090C8FC4C1300A24C5A5F4C5A4B5B4B13C0
030F5BDB7FFEC7FC91387FFFF816C016FCEEFF80DA000313E09238007FF8EE3FFE707E70
138018C07013E018F07013F8A218FC82A218FEA3EA03C0EA0FF0EA3FFC487EA2B5FCA218
FCA25E18F8A26C4816F0495C4916E0D83FE04A13C06C485CD80FF04A1380D807FE91387F
FE003B03FFE003FFFC6C90B65A6C6C15E0010F92C7FC010114FCD9001F1380374F7BCD42
>I<17FC1601A216031607160FA2161F163F167FA216FF5D5DA25D5D5D167F153E157E15
FC15F8EC01F01403EC07E015C0EC0F80141FEC3F00143E5C14FC495A5C495A1307495A5C
49C7FC5B137E137C5B1201485A5B485A120F485A90C8FC123E127E5ABA1280A5C901FCC7
FCAF021FB71280A5394F7CCE42>I<486C150601F0153E01FEEC01FED9FFF0133F91B65A
5F5F5F5F5F94C7FC16FC5E16E093C8FC15FC01F0138091CAFCAC913807FF80023F13F891
B512FE01F36E7E9026FFFC0113E09139E0007FF891C76C7E496E7E01F86E7E5B70138049
16C0C9FC18E08218F0A418F8A31203EA0FE0EA3FF8487EA212FF7FA218F0A25B5E6C4816
E05B01C016C06CC85A18806C6C4A13007FD80FF04A5A6C6CECFFFCD803FE4913F02701FF
E00F5B6C6CB612806D92C7FC010F14F8010114C09026003FFCC8FC354F7ACD42>I<ED07
FE92B512C0020314F0021F14FC91397FFC01FE9139FFE0007F01030180EB3F804990C712
1F4948EC7FC0494814FF4948010313E0495A49485B5A485BA2485BA2486F13C091C7FC48
03001300177E94C7FC5AA25B127FA2ED3FF04AB5FC020714C000FF4914F091391F807FF8
91393E001FFE02786D7E4A6D13807013C06D5A4A6D13E018F05C7013F8A291C813FCA449
16FEA3127FA6123FA37F6C17FCA36C17F85E7E6E15F06C17E06C6D5B6E15C06C4B13806D
6C491300D93FFC495A6DB4EBFFFC010790B512F06D5D01001580021F01FCC7FC020313C0
374F7BCD42>I<173FA24D7EA34D7EA24C7FA34C7FA24C7FA34C7FA24C7FA34C7F163E83
047E80EE7C3F04FC8016F8830301814C7E03038116E0830307814C7E030F81168083031F
811600834B81033E80037E82157C8403FC824B800201835D840203834B800207835D92B8
FC4A83A34A8392C9FC4A83143E85027E84027C8202FC845C850101854A820103855C8501
07854A82A2494884D93FF082B600F0020FB712C0A55A547CD363>65
D<932603FFF01407047F01FF140F0307B600E0131F033F03F8133F92B700FE137F020391
26C003FF13FF020F01F8C7EA3FC1023F01C0EC0FE391B5C80003B5FC4901FC8149498149
01E082011F498249498292CA7E4948834948835A4A83485B4885A24849187FA2485B1B3F
A2485B1B1FA25AA21B0091CDFCA2B5FCAE7EA280A36C1A1FA36C7FA21B3F6C7F1B3E6C7F
1B7E6C6D187C6C1AFC6E18F86C19016D6CEF03F06D7E6FEE07E06D6DEE0FC001076DEE1F
806D01F8EE3F006D6D16FE6D01FF4B5A023F01C0EC07F8020F01FCEC3FF00203903AFFC0
01FFC0020091B6C7FC033F15FC030715F0DB007F1480040301F0C8FC505479D25F>67
D<BB12FCA5D8000701F0C7000F7F1800191F190F19071903190119001A7E1A7F86A386A5
1B80DD03E0130FA497C7FCA31707A3170F171F173FEE01FF92B6FCA5EDF001EE003F171F
170F1707A31703A794CAFCB3A2B812F0A549527CD153>70 D<B81280A5D8000701F0C7FC
B3B3B3B2B81280A529527DD130>73 D<91B8FCA591C7EBFE00B3B3B3EA03C0EA0FF0EA3F
FC487EA2B5FCA44B5BA36C48495B495D6C485B495D6C48495BD80FF8013F5B6CB4D9FFFE
C7FC000190B55A6C6C14F0011F1480010101F0C8FC38537CD144>I<93381FFF800303B5
12FC033FECFFC092B712F00207D9F80113FE021F903A80001FFF804A48C700077FDAFFF8
020113F049496E7F4901C0ED3FFC49496F7E4990C96C7E4948707F013F854948707F4948
707F48864A8248864A177F48864849717EA3481B804A83481BC0A44890CB6C13E0A5B51A
F0AF6C1BE06E5FA46C1BC0A26E5F6C1B80A36C6D4D1300A26C6D4D5AA26C626C6D4C5B6E
5E6C626D6C4C5B6E5E6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A01016D4A13F86D01FE
02075B91263FFFC0013F13C06ED9F801B55A020790B648C8FC020116F8DA003F15C00307
4AC9FCDB001F1380545479D263>79 D<B912FCF0FFE019FE737E1AE0D8000F01E0C7003F
7F060313FC06007F737E7313807313C07313E0851BF0A21BF885A21BFCA91BF8A3611BF0
A21BE04F13C0614F13804F13004F5A060713F8063F5B92B812C097C7FC19F8198003E0CB
FCB3AEB712FEA54E527CD15A>I<B912E018FF19F019FE737ED8000701F0C714E0060F7F
060313FC06007F737E737F8587737FA28785A287A863A261636361634F90C8FC4F5A4F5A
06035B060F13E095B5128092B748C9FC19F019C019F09226F0000713FC050013FF063F7F
727F727F727F727FA2727FA28486A886A71D707513F8A2851C017301C013F0A273EBE003
B86C6D9038F007E0739038FC1FC0070190B51280736C1400080F5BCE13F85D537CD162>
82 D<DA0FFE141C91B500F0133C010702FC137C011F02FF13FC017F15C19026FFF00113
E148903980001FFB4890C7EA07FFD807FC14014848804848153F171F4848150FA2007F16
07491503A2170112FFA217007FA26D167CA27F7F6D93C7FC6C7E14C014F8ECFF806C14F8
EDFFC06C15FC6CEDFF8017F06C16FC6C826C707E6C836D82011F8201078213016D6C8102
0781EC007F030380ED003F040314801600173F837113C0838312F883A3837EA319807EA2
6C5E19007F6D4B5A7F6D4B5A01FC4B5A6D151FD9FFC04A5AD97FF8ECFFE028FE1FFF8007
5B010790B6C7FCD8FC0115FC486C6C14F048010F14C0489026007FFCC8FC3A5479D249>
I<003FBB12FCA59126C0007FEB000301FCC7ED003FD87FF0F00FFE491807491803491801
90C81600A2007E1A7EA3007C1A3EA500FC1A3F481A1FA6C91700B3B3AC49B912C0A55051
7BD05B>I<EC3FFE0107B512E0011F14FC017F14FF2701FFC00F13C02703FE00037F486C
01007F6E6D7E486D80707EA2707EA3707F6C5B6C90C7FC6C5AC9FCA60307B5FC0203B6FC
147F0103B7FC011FEBF00F017F1300EBFFFC000313F04813C0485B4890C7FC5A5B485AF0
81F012FF5BA35EA26D5C127F6D5C003F03F713C36DD901E314E06CD9C00714FF00079026
F01F8114C06C90B5C61480C602FC6D1300011F01F0EB3FFC01010180EB07F03C387CB642
>97 D<EB3FF8B5FCA51203C6FCB3A4EE7FF00307B5FC031F14C0037F14F0913AF9FF007F
FCDAFFF8EB1FFF03E001077F03806D7F92C76C7F4A6E7F5C4A6F7E85183F85A38584A31A
80AD1A00A36061A261187F616E15FF616E4A5B6E4A5B6F495BDACFE04990C7FCDA87F0EB
3FFE913A01FE01FFF8496CB65A49013F14C049010749C8FC90C813E041547DD249>I<91
3803FFE0023F13FE91B67E010315E0010F9038003FF8D93FFCEB07FC4948497E4948131F
4849497E485B485BA24890C7FC5A5B003F6F5A705A705A007F92C8FC5BA312FFAD127F7F
A3123F7F6CEE0F80A26C6D141F18006C6D5C6C6D143E6C6D147E6C6D5C6D6C495A6DB4EB
07F0010F9038C01FE06D90B5128001014AC7FCD9003F13F80203138031387CB63A>I<94
3803FF80040FB5FCA5EE003F170FB3A4913803FF80023F13F849B512FE0107ECFF8F011F
9038C03FEF90273FFE0007B5FCD97FF8130149487F484980484980484980488291C8FC5A
5B123FA2127F5BA312FFAD127FA37F123FA3121F7F6C5E6C6D5C5F6C6D91B5FC6C6D5B6C
6D4914E0D97FFCD90FEFEBFF80D91FFFEB7F8F010790B5120F010114FC6D6C13E0020701
0049C7FC41547CD249>I<913807FF80027F13F849B512FE01076E7E011F010313E0903A
3FFC007FF0D97FF06D7E49486D7E4849130F48496D7E48824890C77E1880485A82003F17
C0A3485A18E082A212FFA290B8FCA401FCCAFCA6127FA37F123FA2EF03E06C7E17076C17
C06C6D140F18806C6D141F6C6DEC3F006C6D147ED97FFC495AD91FFFEB07F86D9038E03F
F0010390B512C001005D023F01FCC7FC020113E033387CB63C>I<ED1FF8913803FFFE02
0FEBFF80023F14C09139FFF83FE001039038E0FFF049138049010113F85BEB3FFEA2EB7F
FCA26F13F0495AEE7FE0EE1F8093C7FCAEB712C0A5C601F8C8FCB3B3A7B612FEA52D547C
D328>I<DA1FFE14FE49B539E007FF80010FDAFC1F13C0013FDAFF7F13E090267FF807EB
FF072701FFE001EBF07F48497E484990387FF83F91C7003F14C048EEFC1F489338FE0700
49021F90C7FCA2003F82A9001F5EA26D143F6C5E6C5E6E137F6C6D495A6C6D485B6CD9F8
0713804890B6C8FCD803EF14FC01C114E02707C01FFEC9FC49CBFCA2487EA37FA27F13FC
90B612FE6CEDFFF017FCEFFF806C8318F06C836C837F48B87E1207D80FFCC700037F4848
EC003F4848150F48486F138083485A83A56D5D007F18006D5D003F5F6C6C4B5A01FE153F
D807FFED7FF06C01C049485AC601FC011F1380013FB648C7FC010F15F8010115C0D9000F
01F8C8FC3B4F7CB542>I<EB3FF8B5FCA51203C6FCB3A4EE1FFC93B57E030314E0030F14
F892391FC07FFC92397E003FFE03F86D7EECF9F04B6D7FECFBC0ECFF8092C76C7FA25CA2
5CA45CB3ACB6D8F807B612C0A542537CD249>I<133FEBFFC0487F487FA2487FA66C5BA2
6C5B6C5B013FC7FC90C8FCAEEB1FF8B5FCA512017EB3B3A6B612F0A51C547CD324>I<15
3FEDFFC04A13E04A13F0A24A13F8A66E13F0A26E13E06E13C0ED3F0092C7FCAEED3FF849
B5FCA5EB00031400B3B3B1EA0780EA1FE0487E487E486C14F05CA216E0A24A13C0D87FF8
14804A13006C48485A001FEB3FFC6CB512F06C5C000191C7FC38003FF8256C87D328>I<
EB3FF8B5FCA51203C6FCB3B3B3B1B612F8A51D537CD224>108 D<D93FF0D91FF84AB47E
B591B56C010F13F8030302E0013F13FE030F6E90B6FCDB3F809027F803F80F7F922A7E00
7FFC07E0077F000302F890283FFE0F80037FC6D9F1F0011F49487EDAF3E0DAFF3E814B15
3CDAF7805D92C76C496D7F14FF4A5EA24A5EA34A5EB3ADB6D8F80FB66CB612F8A565367B
B56E>I<D93FF0EB1FFCB591B57E030314E0030F14F892391FC07FFC92397E003FFE0003
02F86D7EC6EBF1F04B6D7FECF3C0ECF78092C76C7F14FF5CA25CA45CB3ACB6D8F807B612
C0A542367CB549>I<913801FFC0023F13FE91B67E010315E0010F018013F8903A3FFC00
1FFED97FF0EB07FF49486D7F48496D7F48496D7F91C8127F4883488349153F001F83A200
3F8349151FA2007F83A400FF1880AC007F1800A3003F5F6D153FA2001F5FA26C6C4B5AA2
6C6D4A5A6C5F6C6D495B6C6D495B6D6C4990C7FCD93FFCEB1FFE6DB46CB45A010790B512
F0010115C0D9003F49C8FC020313E039387CB642>I<D93FF8EB7FF0B50107B5FC031F14
C0037F14F09126F9FF0013FCDAFFF8EB3FFF000302E0010F7FC602806D7F92C76C7F4A82
4A804A6E7F85187F85A2183F85A4721380AD4E1300A44E5AA26118FF616E5C616E4A5B6E
4A5B6F495B03E04990C7FC6FEB7FFE913AF9FE01FFF802F8B65A033F14C0030749C8FC03
0013E093CAFCB1B612F8A5414D7DB549>I<90393FF001FCB590380FFF804B13E0037F13
F09238FE1FF89138F1F83F00019138F07FFC6CEBF3E015C0ECF780A2ECFF00EE3FF84AEB
1FF0EE0FE093C7FC5CA45CB3ABB612FEA52E367DB535>114 D<903903FFC00E011FEBFC
1E90B6127E000315FE3907FE003FD80FF0130F4848130348481301491300127F90C8127E
A248153EA27FA27F01F091C7FC13FCEBFF806C13FEECFFF06C14FE6F7E6C15E06C816C15
FC6C81C681133F010F15801301D9000F14C0EC003F030713E0150100F880167F6C153FA2
161F7EA217C07E6D143F17807F6DEC7F0001F85C6DEB03FE9039FF801FFC486CB512F0D8
F81F14C0D8F00791C7FC39E0007FF02B387CB634>I<147CA614FCA41301A31303A21307
A2130F131F133F137F13FF1203000F90B512FEB7FCA426007FFCC8FCB3A9EE0F80ABEE1F
006D7EA2011F143E806D6D5A6DEBC1F86DEBFFF001005C023F1380DA03FEC7FC294D7ECB
33>I<D93FF8913801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA25F137F5F6D
6C14F7DC01E713F06D6CD907C7EBFFC0903A0FFF801F876D90B51207010114FC6D6C13F0
020701C091C7FC42377CB549>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj ecrm0900 9 40
/Fj 40 122 df<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F000FC0017E13
1F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB1FE0267FFFC1
B5FCA328357FB42B>28 D<DA1FE013FF9126FFFC0713E0903B03F01E1F80F0903B0FC007
7E003CD91F805B90273F001FF8137E017E4A13FE495CA248485C030F147C95C7FCA9187E
B912FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1FFFE0F13F8A33D357FB440
>30 D<007813F038FC01F8EAFE03A3EAFC01A7007C13F0A2EA7800A7003813E0A2003013
60A4151B78B426>34 D<123C127EB4FCA21380A2127F123D1201A412031300A25A120612
0E120C121C5A5A126009177AB315>39 D<1560B3A6B912E0A2C80060C8FCB3A633327CAB
3C>43 D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A
5A126009177A8715>I<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715
>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814
F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E039
07C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>48
D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>
I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFC
D97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F5B007F
160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C1570
6D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512
F0023F13C0DA03FEC7FC2E377CB437>67 D<B81280A3D803FCC7FC0001151FEE07C01603
A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150C
A592C8FCAB487EB512FEA32B337DB232>70 D<DA03FE130C91393FFF801C91B512E0903A
03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712034848140100031500
5B4848157C485A173C485A171C123F5B007F160CA390C9FC4893C7FCAA0303B512E07E7F
92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB
0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C
>I<B500FE903807FFF8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E
5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9
FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C91
3807FF80B500FE013F13FCA336337EB23C>75 D<D8FFFC923801FFF86D5DA20003EFFE00
D801BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814C0
A3D980FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C
5AA3913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB246
>77 D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A2
00788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C6
80013F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A21507A37EA26C
EC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F138026C003FE
C7FC22377CB42B>83 D<007FB712FEA390398007F001D87C00EC003E0078161E0070160E
A20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB237>I<EB7F
803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4EB01FF131F
EBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F6C133B3A3F
8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA3
13071303B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07F01443
84B217>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020F
C7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114
016E7E81486CEBFF80B500C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA
0FF0B5FCA310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0
903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C
487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3
807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB
07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E00
3E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C39
03F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038
F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716
F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC
91C8FCAA487EB512C0A325307EA02B>I<3803E07C38FFE1FF9038E38F809038E71FC0EA
07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>114
D<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7F
FC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C
5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201
A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1F
F8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D1201
6D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3
D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360
137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA21460
24217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049EB1E0000030100141C81
6C6C017C1318A26D017E1338000002FE1330A290267E01FF5B159F168090263F030F5BA2
16C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC13F6ECF80116FE6D486C
5AA36D481378A36D48133034217F9F37>I<3A7FFF807FF8A33A07F8001FC00003EC0F80
0001EC070015066C6C5BA26D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA2
903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A
1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC025307F9F29>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk ecbx0900 9 7
/Fk 7 117 df<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587
021F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A13
1FA249B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249
157FB500F0013FB512F0A43C347DB343>65 D<EB7FFE0003B512E04814F8390FF00FFC39
1FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F
000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F
0003EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC0FF8EC7FFF01
FDB512C09039FFF01FF09138800FF84A6C7E496D7E496D7EA2178081A217C0A91780A25D
1700A26D495A6D495A6E485A9039F7E03FF001E1B512C0D9C07F90C7FC9038801FF02A34
7DB331>I<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0
A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D8
07FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<3901F81F8000FF
EB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC006049
1300B1B512F0A41F217EA024>114 D<9038FFE1C0000713FF5A383F803F387E000F1407
5A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB
007F140F00F0130714037EA26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38
E03FE01C217DA023>I<133CA5137CA313FCA21201A212031207001FB51280B6FCA3D807
FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl ecrm1200 12 29
/Fl 29 119 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A1206120E5A5A5A12600B1D78891B>44 D<121EEA7F80A2EAFFC0A4EA7F80
A2EA1E000A0A78891B>46 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F
8049130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC48
15FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0
000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC
28447CC131>48 D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E00
7FB6FCA3204278C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C
7E000EC7EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F
1503A46C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A
4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B48
5A4848143848C81230000E1570001FB612F0A25A5AB712E0A326427BC131>I<000615C0
D807C0130701FCEB7F8090B612005D5D5D15E0158026063FFCC7FC90C9FCAE14FF010713
C090381F01F090383800FC01F0137ED807C07F49EB1F8016C090C7120F000615E0C8EA07
F0A316F81503A216FCA5123E127F487EA416F890C712075A006015F0A20070140F003015
E00038EC1FC07E001EEC3F806CEC7F006C6C13FE6C6C485A3901F807F039007FFFE0011F
90C7FCEB07F826447BC131>53 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A512
1EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2B78AA1B>58 D<16C04B7EA34B7EA34B7EA34B
7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03FA2020180ED801FA2DA03007F16
0FA20206801607A24A6D7EA34A6D7EA34A6D7EA20270810260147FA202E08191B7FCA249
820280C7121FA249C87F170FA20106821707A2496F7EA3496F7EA3496F7EA201788313F8
486C83D80FFF03037FB500E0027FEBFFC0A342477DC649>65 D<B8FC17E017FC00019039
C00003FF6C6C4801007FEF3FC0717E717E717E84170384170184A760A21703601707604D
5A4D5AEF7FC04DC7FCEE03FEEE3FF091B65A17FC0280C7B47EEF1FC0EF0FF0717E717E71
7E717E1980187F19C0A2183F19E0A8F07FC0A2198018FF4D1300A24D5AEF0FFC4D5AEF7F
E048486C903803FFC0B9C7FC17FC17C03B447CC345>I<B712FEEEFFE017F800019039C0
0007FE6C6C48903800FF80EF3FC0EF0FF0717E717EEF00FE8484F03F80F01FC0A2F00FE0
19F0180719F8A2180319FCA3F001FEA419FFAD19FEA3180319FCA319F8180719F0180F19
E0A2F01FC0F03F80A2F07F0018FE4D5A4D5AEF0FF0EF3FE0EFFF8048486C010790C7FCB8
12FC17E04CC8FC40447CC34A>68 D<B912F8A3000101C0C7127F6C6C48EC07FC17011700
187C183C181CA284A31806A4180704067FA395C7FCA4160EA2161E163E16FE91B5FCA3EC
8000163E161E160EA21606A319C0A3F0018093C7FCA41803A21900A260A260A2181EA218
3E187EEF01FE170748486C147FB95AA33A447CC342>I<010FB512FEA3D9000313806E13
0080B3B3AB123F487E487EA44A5A13801300006C495A00705C6C13076C5C6C495A6CEB1F
802603E07FC7FC3800FFFCEB1FE027467BC332>74 D<B712FCEEFFC017F800019039C000
0FFC6C6C48EB01FF9338007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718
FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F0178002
80C9FCB3AA3801FFE0B612C0A338447CC342>80 D<B712E016FF17C000019039C0003FF8
6C6C48EB03FCEE00FF717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D
5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E16
0083717EA2717EA784A71A6084171FA21AE0716C13C02601FFE002071301B600C0168094
3801FC03943900FE0700CBEA3FFEF007F843467CC348>82 D<EB07FC90383FFF809038F8
0FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380
C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B1760
48C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF
802701FFFC0113003A001FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120712031201B3EC
03FC91380FFF8091383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713C049
EC0FE049140717F0A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0F
E017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E0903980
1FFF80C7D803FCC7FC2F467DC436>I<EC7F80903803FFF090380FC07C90383F000F01FC
EB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092
C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C13010001
EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7DAC2B>I<167FED
3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD803F8
7F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C
6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026
007F0013002F467DC436>I<EB01FE903807FFC090381F03F090387E00FC49137E48487F
485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FC
A290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03
806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EA01E0EA
07F8A2487EA46C5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315
437DC21C>105 D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>
108 D<D801FC01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F
800007903C7000FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF0
6D7E91C75BA2495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>
I<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FD
C07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC
7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E00
0F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A200
1F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0
FE903807FFF89038007F802A2E7DAC31>I<3903F803F000FFEB1FFCEC3C3EEC707F0007
EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7D
AB26>114 D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C14
78127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C
14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C14
7C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<
1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150C
AA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F00
1E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA21200
6D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013
002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E120016
0C017F5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA26E
5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C
7EAA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm ecrm1728 17.28 20
/Fm 20 117 df<B712F0A724077FA12D>45 D<170FA34D7EA24D7EA34D7EA34D7EA34C7F
17DFA29338039FFC178FA29338070FFE1707040F7FEE0E03A2041E80EE1C01A2043C80EE
3800A24C80187FA24C80183FA24B4880181F0303814C130FA203078193C71207A24B8103
0E80A24B8284A24B8284A24B82197F03F0824B153FA20201834B151FA202038392B8FCA2
4A83A292C91207020E8385A24A8485023C84023882A20278840270177FA202F0844A173F
A24948841A1FA24948841A0FA249CB7F1A074985865B496C85497E48486C4D7F000F01F8
051F13F0B60407B612F0A45C657CE465>65 D<933801FFE0043F13FF4BB612E003079038
003FF8DB1FF0EB03FEDB7FC0903800FF804A48C8EA3FE0DA03FCED0FF0DA0FF0ED03FC4A
486F7E4A486F7E4A48707E4ACA6C7E4948717E4948717E4948717E4948717E4948717E01
3F854A83017F864948727EA24890CC6C7EA24848737EA24848737EA2000F87491907001F
87A34848737EA4007F1C80A24985A400FF1CC0AF6C6C4F1380A5003F1C006D61A3001F63
A26D190F000F63A26C6C4F5AA36C6C4F5AA26C6D4E5A6C636E18FF017F626D6C4D90C7FC
6E5F011F616D6C4D5A6D6C4D5A0103616E171F6D6C4D5A6D6D4C5ADA3FC04CC8FCDA1FF0
ED03FE6E6C4B5A6E6C4B5ADA01FFED3FE09126007FC0ECFF80DB1FF0D903FEC9FCDB07FF
EB3FF8030190B512E0DB003F91CAFC040113E05A6679E369>79 D<DA07FF1403023F01F0
5B49B512FC010702FF5B90260FFC0013C0D93FE090380FF01FD97F80EB03F801FEC86C5A
4848157E4848ED1F7F48486F5A4848815B001F824981003F8290CAFC4883A2007E83A212
FE84A384A27EA36D82A26C7EA26D93C7FC6C7E7F7F6C7E6D7E6C13E06C13FCECFFC06C14
F86CECFF806C15F86DECFF80011F15E06D15F8010315FE01006F7E021F81020181DA003F
80030380DB003F7F04037FEE007FEF1FFF71138017037113C083A2F07FE0183FA2181F00
E018F0180FA41807A27EA47E19E0180F7E19C07E6C171F19806D163F6D17006D5E6D16FE
486C5E6D4B5AD8FC7F1503D91F80EC0FF026F80FE04A5AD907FCEC7F8029F001FFE003FF
C7FC6D6CB512FC48011F14F0020314C0489026001FFEC8FC3C6679E34B>83
D<003FBC12F0A49126800007903880000701FCC76C90C8FC01E0191F49190F4848F107F8
90C81703007E1A01007C1A00A300781B78A400701B38A600F01B3C481B1CA7C91800B3B3
B3A54C7FA2043F13F00203B8FCA456627BE161>I<EC3FE0903803FFFE010F6D7E90393F
C03FE090397C000FF801F0EB03FC48486D7E48486D7E48486E7E48C86C7E7F01F06E7E48
7E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF807903801FF8090
3807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA24848EE01C0A312FF5B
A2160FA3161F6D141B007F153B16736D17806C6C9138E1FC03001FEC03C16C6C903A0780
FE0700D807FE49486C5A2701FF807CEB7FFE6C6CB4486D5A011F01E06D5A010390C7EA07
E03A4179BF43>97 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FC0923807FFFC
031F13FF92397F007FC003F8EB0FF0DAC3E06D7EDAC780EB01FC02CFC87E02DE157F02FC
6F7E4A824A6F7E180F4A82727E5C727EA2851801A285A3841A80AD1A0060A461180361A2
1807616E5E180F6E4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A5A90263E0780495A6E6C
EB0FF090263C01F0495ADA007EEBFF806FB448C8FC0138010F13F890C8138041657CE34B
>I<4AB47E020F13F8023F13FE9139FF007F80D903FCEB07E0D907F0EB01F0D91FE0EB00
7849488049488049C87E48485D4915FF00034B138048485CA2485AA2485AA2003F6F1300
49EC007C94C7FC127FA35B12FFAD127F7FA4123F7FA2001FEE01C07F000F16036D168012
076C6C15076D160000015E6C6C151E6D6C5C6D6C5C6D6C5CD90FF8495AD903FCEB07C090
3A00FF803F8091263FFFFEC7FC020F13F80201138032417BBF3C>I<181EEF3FFEEE07FF
A4EE000F1703A21701B3AAEDFF80020F13F8023F13FE9139FF803F81903A03FC0007C149
48EB01E1D91FE0EB00F94948147D4948143D49C8121F4848150F49150712034848150349
1501120F121F5BA2123F5B127FA45B12FFAD127F7FA3123FA27F121FA26C6C1503A26C6C
150712036D150F6C6C151F0000163D137F6D6CECF9FF6D6CEB01F1D90FF0D903C113C06D
6CD90F81EBFF80D901FFEB7F019039007FFFFC021F13E00201010091C7FC41657BE34B>
I<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F8049486D7ED93FC06D7E49
C76C7E496E7E49140348488148481401000782491400000F8283485A1880123F49153FA2
007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F121FEF01C06C7E17036C
6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D9
03FC495A902700FF803FC7FC91383FFFFC020F13F00201138032417BBF3C>I<187FDA07
FC903803FFC091273FFF800F13E091B539E01F83F0903B03FC07F87C07903A07F001FCF0
903A0FC0007FC04948EB3F80013FEE03E049C76C6CC7FC01FE6E7EA248486E7EA2000382
A2491403000782AA00035E6D1407A200015EA26C6C4A5AA2017F4A5A6D6C495A011F92C8
FC496C137E903937F001FC903973FC07F80160B512E0D9E03F1380DA07FCC9FC4848CBFC
A57FA37F7F7F6CB4FC91B512FC6DECFFE017FC6D15FF6D16C06D16F0013F8201FEC70003
7FD803F89138001FFED807E015074848ED01FF484881003FEF7F8090CA123F127EF01FC0
12FE48170FA66C171F007E1880A2007F173F6C6CEE7F00001F177E6C6C5E6D1501D803F8
ED07F06C6C4B5A6CB4ED3FC0D93FE049B4C7FCD90FFEEB1FFC0103B612F0D9007F148002
0301F0C8FC3C5E7CBF43>103 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FE0
923803FFFC030F13FFDB3F0013C00378EB1FE04B6D7EDAC1C06D7EDAC3808002C7C71203
02CE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A4
42647CE34B>I<1378EA01FE487E487FA66C90C7FC6C5AEA007890C8FCB3A2EB0780EA0F
FFB5FCA41203C6FCA2137FB3B3AC497E487FB61280A4195F7BDE25>I<15F0EC03FCEC07
FEEC0FFFA6EC07FEEC03FCEC00F01500B3A2151FEC3FFF0103B5FCA4EB000F1401A280B3
B3B3AE001FEB01FEEA7FC0EAFFE015FCA2EC03F8A2EC07F0D87FC013E09038800FC0393E
001F80391FC07F00380FFFFE000313F838007FC0207C85DE29>I<D903C0EB7FE0D807FF
903803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D7E27007FC38080
02C7C71203D93FCE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8
F003B612C0A4423F7CBE4B>110 D<4AB47E020F13F0027F13FE4AC67ED903F8EB1FC0D9
07E0EB07E0D91FC0EB03F849486D7E49C87E01FE157F49814848ED1F80000317C04848ED
0FE0A24848ED07F0A2001F17F8491503003F17FCA3007F17FE491501A400FF17FFAC007F
17FEA26D1503A3003F17FCA2001F17F86D1507A2000F17F06D150F000717E06C6CED1FC0
A26C6CED3F806C6CED7F00017F15FE6D6C495A6D6C495A6D6C495AD903F8EB1FC06DB4EB
FF806D6CB448C7FC020F13F00201138038417BBF43>I<D903C0EB7FC0D807FF903807FF
FCB5011F13FFDB7F0013C003F8EB1FF0DAC3E0EB07F80001D9C7806D7E26007FCFC76C7E
02DE6E7ED93FFC6F7E4A6F7E4A82181F4A82727E5C727EA2727EA3727EA41A8084AC4E13
00A54E5AA2611807A24E5A6E5E181F6E4B5A6E5E187F6E4B5A02DE4A90C7FC02CF4A5ADA
C780495ADAC3C0EB0FF0DAC1F0EB3FE0913AC07E01FF806FB448C8FC030F13F803001380
93CAFCB3A3497E497EB612F0A4415B7CBE4B>I<010FEB07F8D80FFFEB1FFEB590387FFF
809238F81FC0913801E03F913903C07FE00003EB0780C6EB0F00140E6D5A0218EB3FC002
38EB1F800230EB0600027090C7FCA2146014E0A25CA55CB3B0497E4813F0B612F8A42B3F
7BBE34>114 D<9138FFC003010FEBF807017FEBFE0F3A01FF003F9FD803F0EB07DF4848
6DB4FCD80F801300001F8148C8FC003E81007E81127C00FC81A4827EA27E7F6C7E6D91C7
FC13F8EA3FFE381FFFE06C13FF15F0000314FE6C6E7E6C6C14E0011F14F8010780010080
02077FDA003F13801507030113C0ED007F00E0ED3FE0161F17F06C150F1607A36C1503A3
7EA26C16E016077E17C06D140F6D15806D141FD8FDF0EC3F00D8F8F8147E017C495A3AF0
1F801FF06DB512C0D8E00391C7FC39C0007FF02C417CBF35>I<1470A714F0A51301A313
03A21307A2130FA2131F133F137F13FF1203000F90B6FCB8FCA326000FF0C8FCB3AEEE01
C0AE6D6CEB0380A316076D6C14005E6D6C130E6D6C131E6E6C5A91383FE0F86EB45A0207
13C0020090C7FC2A597ED734>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 672 872 a Fm(An)45 b(Ob)7 b(ject-Orien)l(ted)46
b(Approac)l(h)g(to)g(Spanning)1791 1054 y(T)-11 b(rees)1650
1343 y Fl(P)m(aul)32 b(Brannan)1254 1459 y(A)m(dvisor:)44
b(Dr.)g(Rob)s(ert)32 b(E.)h(Jamison)1544 1701 y(Decem)m(b)s(er)h(15,)e
(2000)1778 1994 y Fk(Abstract)837 2135 y Fj(The)26 b(goal)g(of)g(this)e
(pro)t(ject)i(w)n(as)g(to)f(pro)r(duce)g(e\036cien)n(t)g(C++)f(co)r(de)
i(for)f(taking)722 2226 y(a)d(graph)f(G)g(as)h(input)e(and)g(pro)r
(ducing)h(data)h(on)f(the)f(isomorphism)h(t)n(yp)r(es)f(of)i(span-)722
2318 y(ning)30 b(subtrees)f(con)n(tained)g(in)g(G.)h(There)g(are)g(t)n
(w)n(o)f(main)g(issues)h(to)g(b)r(e)f(resolv)n(ed.)722
2409 y(First,)35 b(there)d(needs)g(to)g(b)r(e)g(a)h(metho)r(d)e(for)i
(generating)g(all)g(spanning)f(subtrees.)722 2500 y(This)f(is)f(solv)n
(ed)g(using)g(a)g(bac)n(ktrac)n(king)f(v)l(arian)n(t)h(of)g(Krusk)l
(al's)g(algorithm.)47 b(Sec-)722 2592 y(ond,)34 b(as)f(eac)n(h)g
(spanning)f(tree)h(is)g(generated,)i(its)e(isomorphism)e(t)n(yp)r(e)h
(needs)g(to)722 2683 y(b)r(e)i(determined)e(and)h(added)g(to)h(a)f
(list.)59 b(This)34 b(is)h(done)e(using)h(a)f(binary)g("min-)722
2774 y(name")d(certi\034cate)i(for)f(the)f(unro)r(oted)h(tree.)49
b(This)31 b(results)h(in)e(a)h(roughly)g(1,000)722 2866
y(time)f(sp)r(eed-up)f(of)i(earlier)h(Maple)f(co)r(de.)48
b(This)31 b(pap)r(er)g(fo)r(cuses)g(on)f(the)g(general)722
2957 y(problem,)21 b(the)e(t)n(w)n(o)h(main)f(algorithms,)j(and)d
(discusses)i(w)n(a)n(ys)f(that)f(C++)h(w)n(as)h(used)722
3048 y(to)26 b(sp)r(eed)g(up)f(the)g(computations)g(and)g(mak)n(e)g
(the)g(co)r(de)h(more)f(main)n(tanable.)515 3369 y Fi(Con)l(ten)l(ts)
515 3599 y Fh(1)76 b(In)m(tro)s(duction)2166 b(2)639
3746 y Fg(1.1)84 b(What)28 b(are)f(spanning)f(trees?)64
b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)131 b(2)639 3894 y(1.2)84 b(The)28
b(purp)r(ose)f(of)g(this)h(researc)n(h)e(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)131
b(2)639 4041 y(1.3)84 b(Goals)27 b(to)g(b)r(e)h(met)g(in)g(this)g(pap)r
(er)49 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)131 b(3)515 4271 y Fh(2)76 b(The)32
b(Spanning)g(T)-8 b(ree)32 b(Problem)1505 b(3)639 4418
y Fg(2.1)84 b(De\034nition)28 b(of)g(a)f(Graph)21 b(.)42
b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)131 b(3)639 4565 y(2.2)84
b(De\034nition)28 b(of)g(a)f(T)-7 b(ree)29 b(.)41 b(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)131 b(4)639 4712 y(2.3)84 b(De\034nition)28 b(of)g(a)f
(Spanning)g(T)-7 b(ree)52 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)131 b(5)639 4859
y(2.4)84 b(Classifying)27 b(Spanning)g(T)-7 b(rees:)36
b(Certi\034cates)64 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)131 b(6)639 5006 y(2.5)84 b(Ov)n(erview)26 b(of)h(the)h(Pro)r
(cess)55 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)131 b(6)1926 5255
y(1)p eop
%%Page: 2 2
2 1 bop 515 523 a Fh(3)76 b(The)32 b(Jamison)e(Approac)m(h)k(to)d
(Finding)g(Spanning)h(T)-8 b(rees)579 b(7)639 672 y Fg(3.1)84
b(Generating)27 b(the)h(Spanning)f(T)-7 b(rees)61 b(.)41
b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)131 b(7)639 820 y(3.2)84 b(Certi\034cates:)36 b(Kidd's)27
b(Hexnames)h(and)f(Minnames)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)131 b(8)639 969 y(3.3)84 b(Finding)28 b(the)g(lo)r(cal)f(minname)82
b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)131 b(9)639 1118 y(3.4)84 b(Finding)28
b(the)g(global)e(minname)34 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)131 b(9)515
1349 y Fh(4)76 b(An)32 b(Ob)5 b(ject-Orien)m(ted)32 b(Approac)m(h)h(to)
f(the)g(Jamison)e(Algorithm)253 b(10)639 1498 y Fg(4.1)84
b(Biname)27 b(class)74 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
90 b(10)639 1647 y(4.2)84 b(Edge)28 b(class)39 b(.)i(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)90 b(11)639 1795 y(4.3)84
b(T)-7 b(ree)27 b(class)61 b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)90 b(11)639 1944 y(4.4)84 b(Graph)27 b(class)53
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)90
b(11)639 2093 y(4.5)84 b(Span)n(tree)27 b(class)33 b(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)90 b(12)639
2241 y(4.6)84 b(F)-7 b(unction)28 b(hierarc)n(h)n(y)e(of)h(the)h
(original)e(program)e(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)90 b(12)639 2390 y(4.7)84 b(UML)28 b(diagram)e(of)i(the)g(new)f
(program)64 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)90 b(12)515 2622 y Fh(5)76 b(Conclusions)2149
b(13)515 2853 y(6)76 b(F)-8 b(urther)33 b(Researc)m(h)1920
b(13)515 3177 y Fi(1)131 b(In)l(tro)t(duction)515 3424
y Ff(1.1)112 b(What)37 b(are)h(spanning)g(trees?)515
3626 y Fg(A)31 b(spanning)g(tree)f(of)h(a)g(graph)f(is)h(a)f(tree)h
(that)g(includes)g(all)g(the)h(v)n(ertices)e(of)h(the)g(giv)n(en)515
3726 y(graph,)26 b(whose)h(only)g(edges)f(are)g(the)i(edges)f(in)g
(that)h(graph.)36 b(Spanning)27 b(trees)f(are)h(useful)515
3825 y(for)g(man)n(y)h(tasks.)37 b(In)28 b(computing,)g(they)g(can)g(b)
r(e)g(used)g(to)g(describ)r(e)g(a)f(net)n(w)n(ork;)g(sp)r(eci\034-)515
3925 y(cally)-7 b(,)26 b(to)g(classify)f(a)h(net)n(w)n(ork's)f
(reliabilit)n(y)-7 b(.)36 b(In)26 b(mathematics,)g(they)h(ha)n(v)n(e)e
(their)h(uses)g(in)515 4025 y(classifying)i(graphs.)41
b(The)29 b(problem)g(of)g(generating)f(the)h(spanning)g(trees)g(of)g(a)
g(graph)f(is)515 4124 y(not)d(a)f(simple)h(one)f(\(though)h(man)n(y)f
(solutions)g(are)g(kno)n(wn)g([4)o(],[5],[7],[8)o(]\).)37
b(The)25 b(problem)515 4224 y(of)i(writing)g(an)h(optimal)f(algorithm)f
(is)i(ev)n(en)f(more)g(di\036cult.)515 4505 y Ff(1.2)112
b(The)38 b(purp)s(ose)g(of)g(this)e(researc)m(h)515 4707
y Fg(In)19 b(1997,)f(Dr.)34 b(Jamison)18 b(wrote)g(a)g(Maple)h(program)
d(whic)n(h)j(w)n(ould)f(generate)g(the)h(spanning)515
4807 y(trees)26 b(of)i(a)f(graph,)f(giv)n(en)h(a)f(description)h(of)g
(the)h(graph)e(using)h(its)h(edges.)36 b(The)27 b(program)515
4907 y(ran)d(v)n(ery)g(slo)n(wly)-7 b(,)25 b(taking)g(man)n(y)g(hours)f
(of)h(CPU)h(time)g(to)f(generate)f(the)i(spanning)f(trees)515
5006 y(ev)n(en)i(for)g(small)g(graphs.)35 b(P)n(art)27
b(of)g(the)h(problem)f(here)g(w)n(as)g(the)g(hardw)n(are)f(used;)h(an)g
(old)1926 5255 y(2)p eop
%%Page: 3 3
3 2 bop 515 523 a Fg(P)n(o)n(w)n(er)27 b(Macin)n(tosh)h(and,)h(in)g
(some)f(cases,)g(a)h(Macin)n(tosh)f(I)r(Ici)h(w)n(ere)f(used.)40
b(Mo)n(ving)28 b(to)g(a)515 623 y(faster)f(CPU)h(did)g(help,)g(but)g(w)
n(as)f(not)g(enough.)515 772 y(It)21 b(w)n(as)g(clear)f(that)i(a)f
(solution)g(to)g(the)h(sp)r(eed)f(problem)g(w)n(as)f(necessary)-7
b(.)33 b(Maple,)23 b(b)r(eing)e(an)515 872 y(in)n(terpreted)27
b(language,)f(w)n(as)g(not)i(suited)f(for)g(this)h(task;)f(a)g
(compiled)h(language)e(suc)n(h)h(as)515 971 y(C)c(or)f(C++)g(w)n(ould)g
(do)h(m)n(uc)n(h)g(b)r(etter)g(for)f(n)n(um)n(b)r(er)h(crunc)n(hing.)34
b(Morev)n(er,)22 b(the)h(algorithm)515 1071 y(represen)n(ted)j(eac)n(h)
g(tree)h(as)g(a)f(bit)i(string,)f(whic)n(h)g(w)n(as)f(placed)h(in)n(to)
g(a)g(Maple)g(list,)g(whic)n(h)515 1171 y(is)i(not)g(e\036cien)n(t)g
(for)f(storage;)g(represen)n(ting)f(the)j(bit)f(string)g(as)f(a)h
(32-bit)f(in)n(teger)g(w)n(orks)515 1270 y(m)n(uc)n(h)f(b)r(etter.)37
b(A)28 b(few)g(other)f(p)r(oten)n(tial)g(optimizations)g(w)n(ere)g
(also)f(observ)n(ed.)515 1420 y(The)c(other)g(problem)f(noticed)h(w)n
(as)g(that)g(the)h(program)d(w)n(as)h(not)h(written)h(for)e(readabilit)
n(y)515 1519 y(or)33 b(main)n(tainabilit)n(y;)k(rather,)e(it)f(w)n(as)g
(a)g(collection)f(of)h(seemingly)g(unrelated)g(routines)515
1619 y(whic)n(h)j(op)r(erated)f(on)h(seemingly)f(unrelated)h(data)f
(structures.)65 b(After)37 b(analyzing)f(the)515 1719
y(program,)31 b(it)h(w)n(as)f(clear)g(that)i(a)e(mo)r(dular,)i(or)e(ev)
n(en)h(an)g(ob)5 b(ject-orien)n(ted)30 b(approac)n(h)g(to)515
1818 y(the)e(problem)f(w)n(as)f(b)r(etter)i(suited)g(for)f(the)h
(problem.)515 2100 y Ff(1.3)112 b(Goals)37 b(to)g(b)s(e)h(met)e(in)h
(this)g(pap)s(er)515 2303 y Fg(The)26 b(goal)f(of)i(this)f(pap)r(er)g
(is)h(to)f(describ)r(e)g(the)h(bac)n(kground)d(of)i(the)h(spanning)f
(tree)g(prob-)515 2403 y(lem,)h(and)f(to)h(presen)n(t)f(the)h
(structure)f(for)g(the)h(ob)5 b(ject-orien)n(ted)25 b(implemen)n
(tation)h(of)h(the)515 2503 y(Jamison)f(algorithm.)515
2827 y Fi(2)131 b(The)44 b(Spanning)g(T)-11 b(ree)44
b(Problem)515 3075 y Ff(2.1)112 b(De\034nition)36 b(of)i(a)f(Graph)515
3278 y Fg(A)28 b Fe(gr)l(aph)37 b Fd(G)28 b Fg(consists)g(of)g(a)g(set)
h(of)f(v)n(ertices)f Fd(V)48 b Fg(\(also)27 b(called)h(no)r(des\))h
(and)f(a)g(set)g(of)h(edges)515 3378 y Fd(E)34 b Fc(\022)29
b Fd(V)40 b Fc(\002)21 b Fd(V)d Fg(.)49 b(Mathematically)30
b(sp)r(eaking,)i(this)g(is)f(all)g(that)h(is)f(needed)g(to)h(describ)r
(e)e(a)515 3478 y(graph.)35 b(A)28 b(graph)f(can)g(also)f(b)r(e)i
(represen)n(ted)f(visually:)1302 4758 y
 currentpoint currentpoint translate 0.36914 0.36914 scale neg exch
neg exch translate
 1302 4758 a @beginspecial
0 @llx 0 @lly 419 @urx 369 @ury 4190 @rwi @setspecial
%%BeginDocument: /home/cout/files/thesis//graph.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/cout/files/thesis/graph.dia
%%Creator: Dia v0.86
%%CreationDate: Thu Dec 14 20:42:11 2000
%%For: cout
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 419 369
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-5.950000 -15.513274 translate
%%EndProlog


0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 9.000000 5.000000 m 17.000000 5.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 17.000000 5.000000 m 19.000000 10.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.000000 10.000000 m 13.000000 14.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 7.000000 10.000000 m 13.000000 14.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 9.000000 5.000000 m 7.000000 10.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 17.000000 5.000000 m 13.000000 14.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 9.000000 5.000000 m 13.000000 14.000000 l s
1.000000 1.000000 1.000000 srgb
n 9.000000 5.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 9.000000 5.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 17.000000 5.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 17.000000 5.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 19.000000 10.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 19.000000 10.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 13.000000 14.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 13.000000 14.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 7.000000 10.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 7.000000 10.000000 1.000000 1.000000 0 360 ellipse cp s
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
() dup sw 2 div 10.000000 ex sub 4.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
() dup sw 2 div 10.000000 ex sub 5.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(1) dup sw 2 div 10.000000 ex sub 4.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
() dup sw 2 div 18.000000 ex sub 5.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(2) dup sw 2 div 18.000000 ex sub 4.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
() dup sw 2 div 20.000000 ex sub 10.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(3) dup sw 2 div 20.000000 ex sub 9.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(4) dup sw 2 div 15.000000 ex sub 15.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(5) dup sw 2 div 9.000000 ex sub 10.000000 m gs 1 -1 sc sh gr
showpage

%%EndDocument
 @endspecial 1302 4758 a
 currentpoint currentpoint translate 1 0.36914 div 1 0.36914 div scale
neg exch neg exch translate
 1302 4758 a 515 4978 a Fg(In)g(this)h(example)
f(our)g Fe(vertex-set)35 b Fg(is:)1926 5255 y(3)p eop
%%Page: 4 4
4 3 bop 722 523 a Fc(f)p Fb(1)p Fd(;)14 b Fb(2)p Fd(;)g
Fb(3)p Fd(;)g Fb(4)p Fd(;)g Fb(5)p Fc(g)p Fg(,)515 756
y(and)27 b(our)g Fe(e)l(dge-set)36 b Fg(is:)722 988 y
Fc(ff)p Fb(1)p Fd(;)14 b Fb(2)p Fc(g)p Fd(;)g Fc(f)p
Fb(2)p Fd(;)g Fb(3)p Fc(g)p Fd(;)g Fc(f)p Fb(3)p Fd(;)g
Fb(4)p Fc(g)o Fd(;)g Fc(f)p Fb(4)o Fd(;)g Fb(5)p Fc(g)o
Fd(;)g Fc(f)p Fb(5)o Fd(;)g Fb(1)p Fc(g)o Fd(;)g Fc(f)p
Fb(1)o Fd(;)g Fb(4)o Fc(g)p Fd(;)g Fc(f)o Fb(2)p Fd(;)g
Fb(4)o Fc(gg)o Fd(:)515 1220 y Fg(Note)28 b(that)g(the)g(edges)f(of)g
(this)h(graph)f(connect)h(the)g(v)n(ertices)e(so)h(that)i(one)e(migh)n
(t)h(tra)n(v)n(el)515 1320 y(b)r(et)n(w)n(een)e(v)n(ertices)g(b)n(y)g
(using)h(the)g(edges.)36 b(Suc)n(h)26 b(a)h(tra)n(v)n(ersal)d(is)i(kno)
n(wn)g(as)g(a)h Fe(p)l(ath)p Fg(.)37 b(More)515 1420
y(precisely)-7 b(,)27 b(a)h(path)g(is)g(a)g(non-rep)r(eating)f
(\(acyclic\))h(sequence)f(of)h(edges)g(whic)n(h)g(joins)g(t)n(w)n(o)515
1519 y(v)n(ertices.)515 1669 y(In)33 b(this)f(pap)r(er,)i(w)n(e)e(will)
h(b)r(e)g(concerned)f(with)h(comparing)e(t)n(w)n(o)h(graphs)f(to)i(see)
f(if)h(they)515 1768 y(are)26 b Fe(isomorphic)p Fg(.)40
b(T)-7 b(w)n(o)27 b(graphs)f(are)g(said)h(to)h(b)r(e)g(isomorphic)e(if)
i(and)g(only)f(if)616 2001 y(1.)41 b(There)25 b(is)g(a)g(bijection)h
Fd(f)34 b Fg(mapping)25 b(the)h(v)n(ertices)e(of)i(one)f(graph)f(to)h
(the)h(v)n(ertices)e(of)722 2100 y(the)k(other)f(graph,)g(and)616
2267 y(2.)41 b(The)30 b(set)g Fc(f)p Fd(x;)14 b(y)s Fc(g)29
b Fg(b)r(elongs)g(to)h(the)g(edge-set)f(of)h(one)f(graph)g(if)h(and)g
(only)f(if)i(the)f(set)722 2366 y Fc(f)p Fd(f)9 b Fb(\()p
Fd(x)p Fb(\))p Fd(;)14 b(f)9 b Fb(\()p Fd(y)s Fb(\))p
Fc(g)27 b Fg(b)r(elongs)g(to)h(the)g(edge)f(set)g(of)h(the)g(other)f
(graph.)515 2599 y(The)32 b(di\036cult)h(part)e(of)h(comparing)e
(graphs)h(is)h(generating)e(the)j(bijection)f Fd(f)9
b Fg(.)50 b(It)32 b(is)g(not)515 2698 y(kno)n(wn)g(whether)g(the)h
(general)e(graph)g(isomorphism)h(problem)g(is)g(p)r(olynomial)g(or)g
(NP-)515 2798 y(complete.)j(Finding)24 b(isomorphisms)e(b)r(et)n(w)n
(een)h(trees)g(can)h(b)r(e)g(done)f(in)h(p)r(olynomial)f(time;)515
2897 y(in)28 b(this)h(pap)r(er)f(w)n(e)f(will)i(discuss)f(only)g
(algorithms)e(for)i(\034nding)g(isomorphisms)f(b)r(et)n(w)n(een)515
2997 y(t)n(w)n(o)g(trees.)515 3279 y Ff(2.2)112 b(De\034nition)36
b(of)i(a)f(T)-9 b(ree)515 3482 y Fg(A)29 b Fe(tr)l(e)l(e)34
b Fg(is)29 b(an)f(acyliclic,)g(connected)g(graph.)39
b(In)29 b(other)f(w)n(ords,)g(a)g(tree)g(is)g(a)h(sp)r(ecial)f(t)n(yp)r
(e)515 3582 y(of)g(graph)g(for)g(whic)n(h)g(there)g(is)h(a)f(unique)h
(path)f(from)h(an)n(y)e(v)n(ertex)h(to)g(an)n(y)g(other)g(v)n(ertex.)
515 3682 y(F)-7 b(or)27 b(example,)1088 4957 y
 currentpoint currentpoint translate 0.36761 0.36761 scale neg exch
neg exch translate
 1088 4957
a @beginspecial 0 @llx 0 @lly 561 @urx 369 @ury 5610
@rwi @setspecial
%%BeginDocument: /home/cout/files/thesis//tree.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/cout/files/thesis/tree.dia
%%Creator: Dia v0.86
%%CreationDate: Thu Dec 14 20:53:28 2000
%%For: cout
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 561 369
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-4.950000 -16.513274 translate
%%EndProlog


1.000000 1.000000 1.000000 srgb
n 14.000000 6.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 14.000000 6.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 9.000000 11.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 9.000000 11.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 6.000000 15.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 6.000000 15.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 12.000000 15.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 12.000000 15.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 19.000000 11.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 19.000000 11.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 22.000000 15.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 22.000000 15.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 14.000000 11.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 14.000000 11.000000 1.000000 1.000000 0 360 ellipse cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 14.707107 6.707107 m 18.292893 10.292893 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.707107 11.707107 m 21.292893 14.292893 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 9.707107 11.707107 m 11.292893 14.292893 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 8.292893 11.707107 m 6.707107 14.292893 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 14.000000 7.000000 m 14.000000 10.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 13.292893 6.707107 m 9.707107 10.292893 l s
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(1) dup sw 2 div 15.000000 ex sub 5.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(2) dup sw 2 div 8.000000 ex sub 10.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(3) dup sw 2 div 15.000000 ex sub 10.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(4) dup sw 2 div 20.000000 ex sub 10.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(5) dup sw 2 div 8.000000 ex sub 16.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(6) dup sw 2 div 14.000000 ex sub 16.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(7) dup sw 2 div 24.000000 ex sub 16.000000 m gs 1 -1 sc sh gr
showpage

%%EndDocument
 @endspecial 1088 4957 a
 currentpoint currentpoint translate 1 0.36761 div 1 0.36761 div scale
neg exch neg exch translate
 1088 4957 a 1926 5255 a Fg(4)p
eop
%%Page: 5 5
5 4 bop 515 523 a Fg(represen)n(ts)38 b(a)i(tree,)i(b)r(ecause)e(there)
g(is)f(one)h(and)g(only)f(one)h(path)g(b)r(et)n(w)n(een)g(an)n(y)f(t)n
(w)n(o)515 623 y(v)n(ertices)30 b(in)j(the)f(graph.)49
b(Some)31 b(textb)r(o)r(oks)h(de\034ne)g(a)f(tree)h(as)f(a)h(graph)f
(whic)n(h)g(has)h(the)515 722 y(follo)n(wing)26 b(prop)r(erties:)36
b([2,)27 b(p.)37 b(52])616 941 y(1.)k(There)27 b(is)h(exactly)f(one)g
(v)n(ertex,)f(called)i(the)g(ro)r(ot,)e(whic)n(h)i(no)f(edges)g(en)n
(ter.)616 1103 y(2.)41 b(Ev)n(ery)27 b(v)n(ertex)g(except)g(the)h(ro)r
(ot)f(has)g(exactly)g(one)g(en)n(tering)g(edge.)616 1265
y(3.)41 b(There)27 b(is)h(a)f(unique)h(path)f(from)h(the)g(ro)r(ot)e
(to)i(eac)n(h)e(v)n(ertex.)515 1483 y(Suc)n(h)g(a)f(tree)h(is)g(often)g
(called)f(a)h Fe(r)l(o)l(ote)l(d)i(tr)l(e)l(e)p Fg(,)e(b)r(ecause)f(it)
i(has)e(a)h(ro)r(ot.)35 b(A)26 b(tree)g(whic)n(h)g(has)515
1583 y(no)h(ro)r(ot)g(is)g(called)g(a)h Fe(non-r)l(o)l(ote)l(d)36
b Fg(tree)27 b(or)f(a)i Fe(fr)l(e)l(e)i(tr)l(e)l(e)p
Fg(.)515 1728 y(In)k(the)h(ro)r(oted)f(tree,)i(there)e(is)h(a)f(paren)n
(t-c)n(hild)f(relationship)h(b)r(et)n(w)n(een)g(v)n(ertices.)57
b(The)515 1828 y Fe(p)l(ar)l(ent)41 b Fg(of)34 b(a)g(v)n(ertex)f(v)h
(is)g(the)g(v)n(ertex)f(adjacen)n(t)g(to)h(v)g(that)g(is)g(on)g(the)g
(path)g(from)g(the)515 1927 y(ro)r(ot)26 b(to)h(v.)37
b(The)27 b Fe(child)38 b Fg(of)27 b(a)g(v)n(ertex)f(v)h(is)g(a)g(v)n
(ertex)f(adja)n(v)n(en)n(t)g(to)h(v)g(that)h(is)f(not)g(a)g(paren)n(t)
515 2027 y(of)i(v.)43 b(Th)n(us,)30 b(in)g(the)g(ab)r(o)n(v)n(e)e
(example,)i(v)n(ertex)e(7)i(is)f(the)h(c)n(hild)g(of)f(v)n(ertex)g(4,)h
(and)f(v)n(ertex)515 2127 y(4)f(is)h(the)g(paren)n(t)f(of)h(v)n(ertex)f
(7.)40 b(V)-7 b(ertex)29 b(1)f(is)h(the)g(ro)r(ot;)g(note)g(that)g(the)
g(ro)r(ot)f(of)h(a)g(tree)f(is)515 2226 y(generally)e(dra)n(wn)i(at)g
(the)g(top.)39 b(All)29 b(v)n(ertices)e(except)h(v)n(ertex)f(1)h(are)f
(descendan)n(ts)h(of)g(the)515 2326 y(ro)r(ot,)f(and)g(the)h(ro)r(ot)f
(is)g(the)h(ancestor)e(of)i(all)f(other)g(v)n(ertices.)515
2471 y(Giv)n(en)g(these)h(distinctions,)f(a)h(third)f(class)g(of)g
(tree,)h(kno)n(wn)f(as)f(an)i Fe(or)l(der)l(e)l(d)i(tr)l(e)l(e)p
Fg(,)e(can)f(b)r(e)515 2571 y(describ)r(ed.)56 b(An)35
b(ordered)e(tree)h(is)g(a)g(tree)f(in)i(whic)n(h)f(the)h(c)n(hildren)e
(of)i(eac)n(h)e(v)n(ertex)g(are)515 2671 y(giv)n(en)21
b(an)h(ordering.)34 b(There)22 b(is)g(therefore)f(a)h(\034rstb)r(orn)g
(c)n(hild)g(and)g(a)g(lastb)r(orn)g(c)n(hild.)35 b(This)515
2770 y(ordering)26 b(b)r(ecomes)h(imp)r(ortan)n(t)g(in)h(represen)n
(ting)e(a)h(tree)g(in)h(the)g(computer.)515 2916 y(Ev)n(ery)e(ordered)f
(tree)i(has)f(an)g(underlying)g(ro)r(oted)g(tree,)h(and)f(ev)n(ery)g
(ro)r(oted)g(tree)g(has)g(an)515 3015 y(underlying)h(free)g(tree.)38
b(That)28 b(is,)f(a)h(free)f(tree)h(is)g(an)f(abstraction)f(of)i(a)g
(ro)r(oted)f(tree,)g(and)515 3115 y(a)g(ro)r(oted)g(tree)g(is)g(an)h
(abstraction)e(of)h(an)h(ordered)e(tree.)515 3391 y Ff(2.3)112
b(De\034nition)36 b(of)i(a)f(Spanning)i(T)-9 b(ree)515
3590 y Fg(A)27 b Fe(sp)l(anning)i(tr)l(e)l(e)j Fg(of)27
b(a)f(graph)g(G)h(is)f(a)h(tree)f(whic)n(h)h(con)n(tains)f(all)g(the)h
(v)n(ertices)f(of)g(G,)h(and)515 3690 y(whose)g(edge-set)f(is)i(a)f
(subset)g(of)h(the)g(edge-set)f(of)g(G.)873 5006 y
 currentpoint currentpoint translate 0.3672 0.3672 scale neg exch neg
exch translate
 873
5006 a @beginspecial 0 @llx 0 @lly 702 @urx 384 @ury
7020 @rwi @setspecial
%%BeginDocument: /home/cout/files/thesis//spanning_tree.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/cout/files/thesis/spanning_tree.dia
%%Creator: Dia v0.86
%%CreationDate: Thu Dec 14 21:04:43 2000
%%For: cout
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 702 384
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-5.950000 -17.050000 translate
%%EndProlog


1.000000 1.000000 1.000000 srgb
n 7.000000 6.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 7.000000 6.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 13.000000 6.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 13.000000 6.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 7.000000 11.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 7.000000 11.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 13.000000 11.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 13.000000 11.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 7.000000 16.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 7.000000 16.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 13.000000 16.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 13.000000 16.000000 1.000000 1.000000 0 360 ellipse cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 8.000000 6.000000 m 12.000000 6.000000 l s
0.100000 slw
[0.200000] 0 sd
[0.200000] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 13.000000 7.000000 m 13.000000 10.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 7.000000 7.000000 m 7.000000 10.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 8.000000 11.000000 m 12.000000 11.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 7.000000 12.000000 m 7.000000 15.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 13.000000 12.000000 m 13.000000 15.000000 l s
0.100000 slw
[0.200000] 0 sd
[0.200000] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 8.000000 16.000000 m 12.000000 16.000000 l s
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(1) dup sw 2 div 8.000000 ex sub 5.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(2) dup sw 2 div 14.000000 ex sub 5.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(3) dup sw 2 div 8.000000 ex sub 10.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(4) dup sw 2 div 14.000000 ex sub 10.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(5) dup sw 2 div 8.000000 ex sub 15.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(6) dup sw 2 div 14.000000 ex sub 15.000000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 23.000000 6.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 23.000000 6.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 19.000000 10.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 19.000000 10.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 23.000000 10.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 23.000000 10.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 27.000000 10.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 27.000000 10.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 18.000000 14.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 18.000000 14.000000 1.000000 1.000000 0 360 ellipse cp s
1.000000 1.000000 1.000000 srgb
n 28.000000 14.000000 1.000000 1.000000 0 360 ellipse f
0.100000 slw
[] 0 sd
[] 0 sd
0.000000 0.000000 0.000000 srgb
n 28.000000 14.000000 1.000000 1.000000 0 360 ellipse cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 23.000000 7.000000 m 23.000000 9.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 23.707107 6.707107 m 26.292893 9.292893 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.707107 9.292893 m 22.292893 6.707107 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 18.292893 10.707107 m 18.000000 13.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 27.707107 10.707107 m 28.000000 13.000000 l s
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(3) dup sw 2 div 25.000000 ex sub 6.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(1) dup sw 2 div 18.000000 ex sub 9.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(2) dup sw 2 div 20.000000 ex sub 14.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(6) dup sw 2 div 30.000000 ex sub 14.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(4) dup sw 2 div 28.000000 ex sub 9.000000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 2.000000 scf sf
0.000000 0.000000 0.000000 srgb
(5) dup sw 2 div 22.000000 ex sub 9.000000 m gs 1 -1 sc sh gr
showpage

%%EndDocument
 @endspecial 873 5006 a
 currentpoint currentpoint translate 1 0.3672 div 1 0.3672 div scale
neg exch neg exch translate
 873 5006 a 1926 5255 a Fg(5)p
eop
%%Page: 6 6
6 5 bop 515 523 a Fg(In)34 b(this)h(example,)h(the)f(graph)e(on)h(the)h
(righ)n(t)f(has)g(a)g(n)n(um)n(b)r(er)g(of)g(spanning)g(trees;)j(one)
515 623 y(spanning)30 b(tree)h(is)g(sho)n(wn)g(on)g(the)g(righ)n(t.)48
b(Note)31 b(that)g(the)h(spanning)f(tree)g(connects)f(all)515
722 y(the)f(v)n(ertices)f(of)h(the)g(graph)e(and)i(that)g(the)h
(spanning)e(tree)g(only)h(uses)f(edges)g(whic)n(h)h(are)515
822 y(in)f(the)g(original)d(graph.)515 971 y(Our)f(goal)g(is)g(to)h
(write)g(a)f(program)f(whic)n(h)i(will)g(generate)f(and)h(classify)f
(all)g(the)i(spanning)515 1071 y(trees)21 b(of)g(a)g(graph,)h(for)f
(the)h(purp)r(ose)f(of)g(classifying)g(graphs.)33 b(In)22
b(the)g(pro)r(cess)e(of)i(doing)f(so,)515 1171 y(it)30
b(will)g(b)r(e)h(adv)-5 b(an)n(tageous)27 b(to)j(remo)n(v)n(e)f
(duplicate)h(spanning)f(trees;)i(this)f(m)n(ust)g(b)r(e)g(done)515
1270 y(b)n(y)d(\034nding)h(whether)f(the)h(most)f(recen)n(tly)g(disco)n
(v)n(ered)e(spanning)i(tree)h(is)f(isomorphic)f(to)515
1370 y(an)n(y)h(previous)f(spanning)h(trees.)515 1652
y Ff(2.4)112 b(Classifying)36 b(Spanning)i(T)-9 b(rees:)50
b(Certi\034cates)515 1855 y Fg(T)-7 b(o)40 b(determine)h(isomorphism)f
(b)r(et)n(w)n(een)h(t)n(w)n(o)g(graphs,)i(it)e(is)g(often)g(adv)-5
b(an)n(tageous)39 b(to)515 1955 y(generate)19 b Fe(c)l(erti\034c)l
(ates)28 b Fg(for)21 b(the)g(t)n(w)n(o)f(graphs)g(and)h(compare)e(the)j
(certi\034cates,)f(rather)f(than)515 2054 y(using)32
b(a)h(more)g(complex)f(metho)r(d)i(to)f(tra)n(v)n(erse)d(the)k(edges)e
(of)h(the)h(graphs.)52 b(Generally)515 2154 y(sp)r(eaking,)26
b(the)i(fastest)g(graph)e(isomorphism)h(algorithms)f(use)h
(certi\034cates)g([1)o(,)h(p.)37 b(245].)515 2303 y(W)-7
b(e)27 b(can)f(de\034ne)h(a)f(certi\034cate)g(as)g(a)g(function)h(C)g
(suc)n(h)f(that)h(for)f(an)n(y)f(graphs)h Fd(G)3056 2315
y Fa(1)3093 2303 y Fg(and)g Fd(G)3318 2315 y Fa(2)3356
2303 y Fg(:)722 2536 y Fd(C)6 b Fb(\()p Fd(G)884 2548
y Fa(1)922 2536 y Fb(\))24 b(=)e Fd(C)6 b Fb(\()p Fd(G)1227
2548 y Fa(2)1265 2536 y Fb(\))28 b Fg(i\033)h Fd(G)1490
2548 y Fa(1)1555 2536 y Fg(and)e Fd(G)1781 2548 y Fa(2)1846
2536 y Fg(are)g(isomorphic.)515 2768 y(C)h(is)g(a)f(certi\034cate)h
(for)f(a)h(family)g(F)g(of)g(graphs)f(i\033)i(this)f(holds)g(true)g
(for)f(all)h(graphs)e(in)j(F.)515 2868 y(F)-7 b(or)27
b(our)f(program,)g(w)n(e)h(require)g(a)g(certi\034cate)g(for)g(the)h
(family)f(of)h(trees.)515 3150 y Ff(2.5)112 b(Ov)m(erview)37
b(of)g(the)h(Pro)s(cess)515 3353 y Fg(The)26 b(purp)r(ose)g(of)g(the)h
(program)d(is)i(to)g(determine)h(all)f(the)g(t)n(yp)r(es)h(of)f
(spanning)g(trees)f(of)h(a)515 3453 y(giv)n(en)e(graph.)35
b(It)26 b(m)n(ust)f(therefore)g(b)r(e)h(able)f(to)g(generate)f(all)h
(the)h(spanning)e(trees)h(and)g(to)515 3552 y(determine)j(if)h(they)g
(are)e(isomorphic)g(to)i(an)n(y)e(previously)h(found)g(spanning)g
(tree.)39 b(Th)n(us,)515 3652 y(pseudo)r(co)r(de)27 b(for)g(the)h
(program)d(migh)n(t)j(lo)r(ok)f(lik)n(e:)625 3802 y(Initialize)h(data)f
(structures)625 3901 y Fh(do)736 4001 y Fg(Generate)g(the)h(next)g
(spanning)f(tree)736 4100 y(Generate)g(a)g(certi\034cate)g(for)g(this)h
(spanning)f(tree)736 4200 y Fh(if)36 b Fg(this)28 b(certi\034cate)f
(has)g(not)h(b)r(een)g(found)g Fh(then)847 4300 y Fg(add)f(this)h
(certi\034cate)f(to)g(our)g(list)736 4399 y Fh(end)32
b(if)625 4499 y(while)27 b Fg(there)g(are)g(no)g(more)g(spanning)g
(trees)1926 5255 y(6)p eop
%%Page: 7 7
7 6 bop 515 523 a Fi(3)131 b(The)65 b(Jamison)f(Approac)l(h)i(to)e
(Finding)i(Spanning)712 672 y(T)-11 b(rees)515 918 y
Ff(3.1)112 b(Generating)37 b(the)g(Spanning)i(T)-9 b(rees)515
1119 y Fg(The)33 b(algorithm)g(whic)n(h)g(is)g(used)h(is)f(a)g(v)-5
b(ariation)33 b(on)g(Krusk)-5 b(al's)32 b(algorithm)g(for)h(\034nding)
515 1219 y(the)24 b(minimal)h(spanning)e(tree)h(of)g(a)g(graph.)34
b(While)25 b(Krusk)-5 b(al's)23 b(algorithm)f(\034nds)j(only)e(one)515
1318 y(tree,)32 b(w)n(e)e(w)n(an)n(t)h(all)g(the)h(spanning)e(trees)h
(of)g(a)g(graph;)h(this)f(requires)f(the)i(abilit)n(y)f(to)g(b)r(e)515
1418 y(able)26 b(to)g(bac)n(ktrac)n(k.)34 b(Krusk)-5
b(al's)26 b(algorithm)f(\(in)i(Algol-lik)n(e)e(notation\))h(lo)r(oks)g
(lik)n(e:)35 b([2,)27 b(p.)515 1517 y(110])642 1664 y
Fh(b)s(egin)736 1764 y Fd(T)34 b Fc( )23 b(;)736 1864
y Fd(V)c(S)28 b Fc( )23 b(;)740 1963 y Fh(for)28 b Fg(eac)n(h)f(v)n
(ertex)f Fd(v)h Fc(\022)22 b Fd(V)47 b Fh(do)27 b Fg(add)h(the)g
(singleton)f(set)g Fc(f)p Fd(v)s Fc(g)g Fg(to)g Fd(V)19
b(S)5 b Fg(;)736 2063 y Fh(while)26 b Fc(k)p Fd(V)19
b(S)5 b Fc(k)22 b Fd(>)h Fb(1)k Fh(do)847 2163 y(b)s(egin)957
2262 y Fg(c)n(ho)r(ose)g Fc(f)p Fd(v)s(;)14 b(w)r Fc(g)p
Fg(,)27 b(an)h(edge)f(in)g Fd(E)33 b Fg(of)28 b(lo)n(w)n(est)e(cost;)
957 2362 y(delete)i Fc(f)p Fd(v)s(;)14 b(w)r Fc(g)28
b Fg(from)f Fd(E)5 b Fg(;)957 2461 y Fh(if)37 b Fd(v)31
b Fg(and)c Fd(w)j Fg(are)d(in)h(di\033eren)n(t)f(sets)h
Fd(W)2175 2473 y Fa(1)2240 2461 y Fg(and)f Fd(W)2479
2473 y Fa(2)2545 2461 y Fg(in)h Fd(V)19 b(S)32 b Fh(then)1068
2561 y(b)s(egin)1179 2661 y Fg(replace)26 b Fd(W)1538
2673 y Fa(1)1604 2661 y Fg(and)h Fd(W)1843 2673 y Fa(2)1908
2661 y Fg(in)h Fd(V)19 b(S)32 b Fg(b)n(y)c Fd(W)t Fb(1)18
b Fc([)h Fd(W)2565 2673 y Fa(2)2603 2661 y Fg(;)1179
2760 y(add)27 b Fc(f)p Fd(v)s(;)14 b(w)r Fc(g)28 b Fg(to)f
Fd(T)1068 2860 y Fh(end)847 2960 y(end)769 3059 y(end)515
3322 y Fg(The)g(revised)g(implemen)n(tation)h(has)f(some)g(k)n(ey)f
(di\033erences:)616 3547 y(1.)41 b(W)-7 b(e)36 b(start)e(with)h(the)h
(\034rst)e(edge)h(and)f(mo)n(v)n(e)g(on)h(to)f(the)i(next)f(edge,)h(so)
e(that)h(w)n(e)722 3646 y(attempt)24 b(to)f(add)g(all)g(the)g(edges,)h
(rather)e(than)h(only)f(adding)h(edges)f(of)i(lo)n(w)n(est)e(cost.)616
3810 y(2.)41 b(W)-7 b(e)37 b(bac)n(ktrac)n(k)d(if)j(certain)f
(conditions)g(are)g(met,)j(so)d(that)g(the)h(algorithm)f(only)722
3909 y(stops)27 b(when)h(w)n(e)f(can)g(neither)h(for)f(forw)n(ard)f
(nor)h(bac)n(kw)n(ard)616 4073 y(3.)41 b(If)33 b(v)g(and)f(w)g(are)g
(not)g(in)h(di\033eren)n(t)g(sets)f(\(w)n(e)g(call)g(these)h
Fe(c)l(omp)l(onents)7 b Fg(\),)34 b(then)e(w)n(e)722
4173 y(pic)n(k)c(a)f(di\033eren)n(t)g(edge.)515 4397
y(Th)n(us,)g(our)g(revised)g(implemen)n(tation,)g(in)h(BASIC-lik)n(e)f
(pseudo)r(co)r(de,)g(lo)r(oks)g(lik)n(e:)625 4544 y Fh(for)h
Fg(eac)n(h)f(v)n(ertex)g(v)h Fh(do)736 4643 y Fg(Insert)f(v)h(in)n(to)f
(the)h(comp)r(onen)n(t)f(list)625 4743 y Fh(next)625
5006 y(while)g Fg(j)h(<)f(n)n(um_no)r(des)g Fh(do)1926
5255 y Fg(7)p eop
%%Page: 8 8
8 7 bop 736 523 a Fg(P)n(erform)27 b(some)g(heuristics)g(to)g(see)h(if)
g(w)n(e)f(m)n(ust)g(bac)n(ktrac)n(k)736 786 y Fh(if)36
b Fg(w)n(e)28 b(do)f(not)h(bac)n(ktrac)n(k)d Fh(then)847
885 y(if)36 b Fg(the)28 b(v)n(ertices)f Fc(f)p Fd(v)s(;)14
b(w)r Fc(g)27 b Fg(of)h(edge)f(i)g(are)g(in)h(di\033eren)n(t)f(comp)r
(onen)n(ts)g Fh(then)957 985 y Fg(A)n(dd)h(edge)f(i)h(to)f(the)h(tree)g
Fd(T)937 1085 y Fg(Sa)n(v)n(e)d(the)i(old)f(comp)r(onen)n(t)g(n)n(um)n
(b)r(ering)f(in)i(case)e(w)n(e)h(m)n(ust)h(bac)n(ktrac)n(k)d(later)957
1184 y(Giv)n(e)k Fd(v)j Fg(and)c Fd(w)j Fg(the)e(same)f(comp)r(onen)n
(t)g(n)n(um)n(b)r(ering)847 1284 y Fh(else)957 1384 y
Fg(Pic)n(k)h(a)f(di\033eren)n(t)h(edge)f(i)847 1483 y
Fh(end)k(if)736 1583 y(end)h(if)625 1682 y(end)515 1945
y Fg(The)h(comp)r(onen)n(t)f(n)n(um)n(b)r(ering)h(is)f(used)h(to)g
(detect)g(cycles.)53 b(By)32 b(giving)g(t)n(w)n(o)g(connected)515
2045 y(edges)k(the)i(same)e(comp)r(onen)n(t)h(n)n(um)n(b)r(ering,)i(a)e
(cycle)f(can)h(b)r(e)h(detected)f(whenev)n(er)f(an)515
2145 y(attempt)e(is)f(made)h(to)f(connect)g(to)h(v)n(ertices)e(that)i
(are)f(in)g(the)h(same)f(comp)r(onen)n(t.)55 b(F)-7 b(or)515
2244 y(this)26 b(to)g(w)n(ork,)e(a)i(consisten)n(t)f(n)n(um)n(b)r
(ering)g(m)n(ust)h(b)r(e)g(used;)h(this)f(can)f(b)r(e)i(done)e(b)n(y)h
(pic)n(king)515 2344 y(the)21 b(lo)n(w)n(est)e(or)h(greatest)g(comp)r
(onen)n(t)g(n)n(um)n(b)r(er,)i(or)e(b)n(y)g(simply)h(assigning)e
Fd(w)r Fg('s)i(comp)r(onen)n(t)515 2443 y(n)n(um)n(b)r(er)27
b(to)g Fd(v)k Fg(\(or)c(vise-v)n(ersa\).)515 2590 y(The)g(conditions)g
(under)h(whic)n(h)f(w)n(e)g(m)n(ust)h(bac)n(ktrac)n(k)d(are)i
(determined)h(b)n(y)639 2813 y Fc(\017)41 b Fg(a)23 b(con)n(trol)f
(arra)n(y)f(whic)n(h)i(determines)g(whic)n(h)g(edges)f(m)n(ust)h(b)r(e)
h(visited)f(b)r(efore)g(other)722 2912 y(edges)k(can)g(b)r(e)h(visited)
639 3075 y Fc(\017)41 b Fg(whether)28 b(there)f(are)g(enough)g(un)n
(used)g(edges)g(left)h(to)f(build)i(a)e(spanning)g(tree)515
3298 y(The)g(con)n(trol)g(arra)n(y)e(heuristic)i(is)h(b)r(ey)n(ond)f
(the)h(scop)r(e)f(of)g(this)h(do)r(cumen)n(t.)515 3576
y Ff(3.2)112 b(Certi\034cates:)49 b(Kidd's)37 b(Hexnames)h(and)g
(Minnames)515 3776 y Fg(In)20 b(order)f(to)h(e\036cien)n(tly)g
(determine)g(whether)g(a)g(spanning)f(tree)h(has)g(already)e(b)r(een)j
(found,)515 3876 y(w)n(e)29 b(m)n(ust)h(generate)f(certi\034cates)g
(for)g(ev)n(ery)g(spanning)g(tree)h(w)n(e)f(\034nd)h(and)g(compare)f
(the)515 3976 y(certi\034cates.)34 b(Kreher)21 b(and)i(Stinson)g(prop)r
(ose)e(a)i(metho)r(d)g(for)f(generating)g(certi\034cates)g(for)515
4075 y(trees)c(in)i Fe(Combinatorial)25 b(A)n(lgorithms)h
Fg([1].)34 b(An)20 b(alternativ)n(e)e(metho)r(d)i(has)f(b)r(een)g(prop)
r(osed)515 4175 y(b)n(y)27 b(T)-7 b(ra)n(vis)26 b(Kidd)i([9)o(])g(and)f
(is)h(the)g(metho)r(d)g(used)f(in)h(the)g(Jamison)e(approac)n(h.)515
4322 y(W)-7 b(e)28 b(rep)r(eat)f(Kidd's)g(approac)n(h,)f(BINAME2,)i
(here:)722 4544 y Fh(Step)k(1)p Fg(:)37 b(Lab)r(el)27
b(eac)n(h)g(leaf)g(01.)722 4676 y Fh(Step)36 b(2)p Fg(:)43
b(If)31 b(all)g(the)g(c)n(hildren)f(of)h(a)f(no)r(de)h(x)g(ha)n(v)n(e)e
(b)r(een)j(lab)r(elled,)f(then)h(to)722 4775 y(determine)d(the)f(lab)r
(el)h(for)f(x,)g(concatenate)f(the)i(lab)r(els)f(of)g(the)h(c)n
(hildren)f(\(in)722 4875 y(order\),)f(add)g(a)g(0)h(to)f(the)h(b)r
(eginning,)f(and)h(add)f(a)g(1)h(to)f(the)h(end.)722
5006 y Fh(Step)k(3)p Fg(:)37 b(Rep)r(eat)27 b(step)h(2)f(un)n(til)h
(the)g(ro)r(ot)f(is)g(lab)r(elled.)1926 5255 y(8)p eop
%%Page: 9 9
9 8 bop 515 523 a Fg(Th)n(us,)23 b(w)n(e)e(generate)g(a)g(string)h(of)g
(0's)f(and)h(1's,)g(whic)n(h)g(is)g(kno)n(wn)f(as)g(a)h
Fe(biname)p Fg(.)36 b(A)22 b(biname)515 623 y(is)34 b(a)g
(certi\034cate)g(for)f(the)i(family)g(of)f(ordered)f(trees.)56
b(An)35 b(imp)r(ortan)n(t)f(prop)r(ert)n(y)f(of)i(the)515
722 y(biname)25 b(is)h(that)g(the)g(biname)g(of)g(eac)n(h)f(no)r(de)g
(of)h(a)g(tree)f(is)h(the)g(biname)f(of)h(the)g(branc)n(h)f(of)515
822 y(the)f(tree)g(ro)r(oted)f(at)h(that)g(no)r(de;)i(this)e(is)g
(useful)g(for)g(\034nding)g(the)g(minname,)h(a)f(certi\034cate)515
922 y(for)j(the)h(family)f(of)h(ro)r(oted)f(or)f(unro)r(oted)h(trees.)
515 1200 y Ff(3.3)112 b(Finding)37 b(the)g(lo)s(cal)f(minname)515
1400 y Fg(While)28 b(the)h(biname)f(is)g(a)g(certi\034cate)f(for)h(the)
g(family)g(of)h(ordered)d(trees,)i(the)g(lo)r(cal)g(min-)515
1500 y(name)33 b(is)h(a)g(certi\034cate)f(for)h(the)g(family)g(of)g(ro)
r(oted)f(trees.)56 b(In)34 b(other)f(w)n(ords,)h(the)h(lo)r(cal)515
1599 y(minname)e(is)f(a)h(certi\034cate)f(that)h(is)g(the)g(same)f(for)
h(a)f(ro)r(oted)g(tree)h(and)f(all)h(the)g(ro)r(oted)515
1699 y(trees)g(isomorphic)f(to)h(it.)55 b(Sp)r(ec\034cally)-7
b(,)35 b(the)f(lo)r(cal)f(minname)g(is)h(the)g(lexicographically)515
1798 y(least)27 b(biname)g(for)g(a)h(complete)f(set)h(of)f(isomorphic)f
(ro)r(oted)h(trees.)515 1945 y(A)i(lexicographic)e(ordering)g(is)i
(essen)n(tially)e(a)i(dictionary)e(ordering.)39 b(That)29
b(is,)g(v)g(is)g(lexi-)515 2045 y(cographically)c(less)i(than)h(w)f
(if:)616 2267 y(1.)41 b(v)28 b(is)f(an)h(initial)f(substring)g(of)h(w,)
f(OR)616 2431 y(2.)41 b(In)31 b(the)f(\034rst)h(p)r(osition)f(\(from)g
(the)h(left\))g(in)f(whic)n(h)h(v)f(and)g(w)g(disagree,)g(v)g(has)g
(the)722 2530 y(smaller)d(en)n(try[6)o(].)515 2753 y(The)34
b(simplest)g(algorithm)e(for)i(\034nding)g(the)g(lo)r(cal)f(minname)h
(for)g(a)f(tree)h(is)f(to)h(\034nd)g(all)515 2852 y(the)41
b(trees)e(isomorphic)h(to)g(the)h(giv)n(en)e(tree,)44
b(\034nd)c(all)h(their)f(binames,)j(and)e(pic)n(k)f(the)515
2952 y(lexicographically)28 b(least)i(biname)h(as)f(the)h(minname.)46
b(Ho)n(w)n(ev)n(er,)30 b(this)h(is)g(not)f(the)h(most)515
3052 y(e\036cien)n(t)c(metho)r(d.)515 3198 y(Giv)n(en)c(a)g(biname,)h
(there)f(is)h(a)f(simple)g(\(though)h(not)f(ob)n(vious\))g(pro)r
(cedure)f(for)h(\034nding)g(all)515 3298 y(the)30 b(binames)f(for)h
(all)f(other)g(ro)r(oted)g(trees)g(with)i(the)f(same)f(lo)r(cal)g
(minname;)i(from)f(this)515 3398 y(list)e(of)f(binames,)g(the)h(lo)r
(cal)f(minname)h(can)f(easily)g(b)r(e)h(found.)515 3544
y(The)e(lo)r(cal)g(minname)g(can)g(b)r(e)h(generated)e(using)h(a)f(mo)r
(di\034cation)h(of)h(Kidd's)f(BINAME2)515 3644 y(algorithm:)722
3866 y Fh(Step)32 b(1)p Fg(:)37 b(Lab)r(el)27 b(eac)n(h)g(leaf)g(01.)
722 3998 y Fh(Step)d(2)p Fg(:)34 b(\(The)21 b(smerg)f(routine\))g(If)h
(all)g(the)g(c)n(hildren)g(of)f(a)h(no)r(de)g(x)f(ha)n(v)n(e)g(b)r(een)
722 4098 y(lab)r(elled,)26 b(then)g(to)f(determine)h(the)f(lab)r(el)h
(for)f(x,)g(concatenate)g(the)g(lab)r(els)h(of)722 4197
y(the)34 b(c)n(hildren)g(in)g(lexicographic)d(order,)j(add)g(a)f(0)h
(to)f(the)i(b)r(eginning,)g(and)722 4297 y(add)28 b(a)f(1)g(to)g(the)h
(end.)722 4428 y Fh(Step)k(3)p Fg(:)37 b(Rep)r(eat)27
b(Step)i(2)e(un)n(til)h(the)g(ro)r(ot)e(is)i(lab)r(elled.)515
4706 y Ff(3.4)112 b(Finding)37 b(the)g(global)f(minname)515
4907 y Fg(T)-7 b(o)25 b(\034nd)h(the)h(global)d(minname,)j(it)f(is)g
(imp)r(ortan)n(t)f(to)h(note)f(that)i(eac)n(h)e(step)h(of)f(the)h(ab)r
(o)n(v)n(e)515 5006 y(pro)r(cedure)31 b(also)g(generates)f(a)i(biname)g
(for)f(eac)n(h)g(of)h(the)h(c)n(hildren.)49 b(Giv)n(en)32
b(one)g(ro)r(oted)1926 5255 y(9)p eop
%%Page: 10 10
10 9 bop 515 523 a Fg(tree,)32 b(w)n(e)f(can)g(\034nd)h(a)f(ro)r(oted)g
(tree)g(isomorphic)f(to)i(that)f(tree)h(b)n(y)f(simply)g(rotating)g
(the)515 623 y(ro)r(ot.)50 b(Th)n(us,)33 b(giv)n(en)f(a)f(minname)i(of)
f(a)g(ro)r(oted)f(tree,)j(w)n(e)e(can)f(\034nd)i(the)g(minname)f(of)g
(a)515 722 y(ro)r(oted)27 b(tree)g(isomorphic)f(to)h(that)h(tree)g(b)n
(y)f(\020rotating)f(the)i(ro)r(ot\021)33 b(for)27 b(the)h(minname.)515
871 y(Let)d(v)g(b)r(e)h(the)f(new)g(ro)r(ot)g(and)g(w)g(b)r(e)h(the)f
(paren)n(t)f(of)i(v)f(in)g(the)h(old)f(ro)r(oted)f(tree)h(\(and)g(th)n
(us)515 971 y(the)j(c)n(hild)h(of)f(v\).)39 b(The)29
b(minname)f(of)g(this)h(new)f(ro)r(oted)g(tree)g(is)g(th)n(us)g
(smerg\(c)n(hildren)f(of)515 1070 y(v,)e(c)n(hildren)e(of)h(w)g(not)h
(coun)n(ting)e(v\).)36 b(W)-7 b(e)25 b(can)e(calculate)h(the)g(lo)r
(cal)g(minnames)g(of)g(all)g(the)515 1170 y(ro)r(oted)g(trees)h(asso)r
(ciated)e(with)j(a)f(free)g(tree)f(using)h(this)h(metho)r(d;)g(the)g
(lexicographically)515 1270 y(least)h(lo)r(cal)g(minname)h(is)f(the)h
(global)e(minname.)515 1593 y Fi(4)131 b(An)47 b(Ob)7
b(ject-Orien)l(ted)47 b(Approac)l(h)g(to)f(the)h(Jamison)712
1742 y(Algorithm)515 1973 y Fg(The)26 b(class)g(hierarc)n(h)n(y)f
(presen)n(ted)h(here)g(is)h(based)f(on)g(Dr.)37 b(Jamison's)25
b(original)g(program,)515 2073 y(written)19 b(in)h(Maple.)34
b(The)19 b(structure)g(is)g(still)h(a)f(w)n(ork-in-progress,)d(and)k
(should)f(b)r(e)h(treated)515 2173 y(as)27 b(suc)n(h.)36
b(In)28 b(fact,)g(the)g(design)f(could)g(b)r(e)h(m)n(uc)n(h)f(impro)n
(v)n(ed,)g(as)f(discussed)i(b)r(elo)n(w.)515 2454 y Ff(4.1)112
b(Biname)36 b(class)515 2656 y Fg(The)25 b(biname)g(class)g(represen)n
(ts)f(a)g(biname)i(using)f(an)g(in)n(teger)f(\(or,)h(if)h(more)f(than)g
(32-bits)515 2756 y(are)31 b(required,)h(using)g(a)g(GMP)h(in)n
(teger\).)49 b(It)33 b(pro)n(vides)e(no)g(mec)n(hanism)h(for)g
(generating)515 2856 y(the)j(biname,)i(but)e(it)g(do)r(es)g(pro)n(vide)
f(pro)r(cedures)f(for)h(comparing)g(and)g(concatenating)515
2955 y(binames.)515 3104 y(T)-7 b(w)n(o)34 b(binames)h(are)f(equal)g
(if)i(their)e(in)n(teger)h(represen)n(tations)d(are)i(equal.)59
b(T)-7 b(esting)35 b(for)515 3204 y(equalit)n(y)27 b(is)g(th)n(us)h
(O\(1\).)515 3352 y(W)-7 b(e)28 b(can)f(compare)f(binames)h(using)h
(the)f(follo)n(wing)g(O\(1\))g(algorithm:)616 3583 y(1.)41
b(T)-7 b(est)28 b(to)f(see)h(if)g(b1)f(and)g(b2)h(ha)n(v)n(e)e(the)i
(same)f(length)616 3748 y(2.)41 b(Create)27 b(a)g(temp)r(orary)f(b4)i
(whic)n(h)f(is)h(equal)f(to)g(max\(b1,)g(b2\))616 3913
y(3.)41 b(Shift)29 b(b3.i)e(to)h(the)g(left)g(to)f(ha)n(v)n(e)g(the)h
(same)f(length)g(as)g(b4.i)616 4079 y(4.)41 b(return)27
b(the)h(appropriate)e(v)-5 b(alue)27 b(after)h(comparing)e(b3.i)h(<)g
(b4.i)515 4309 y(In)37 b(order)e(for)h(this)h(algoritm)e(to)h(w)n(ork,)
i(ho)n(w)n(ev)n(er,)f(w)n(e)f(m)n(ust)g(use)h(a)f(sligh)n(tly)g
(di\033eren)n(t)515 4408 y(represen)n(tation)29 b(for)h(our)g(binames)g
(than)h(Kidd's)g(approac)n(h.)44 b(Kidd's)30 b(approac)n(h)f(uses)h(a)
515 4508 y(0)25 b(to)i(represen)n(t)d(going)h(do)n(wn)h(a)g(branc)n(h)f
(of)h(the)h(tree,)f(and)g(a)f(1)h(to)g(represen)n(t)f(going)g(bac)n(k)
515 4608 y(up;)36 b(w)n(e)d(w)n(an)n(t)g(to)g(do)h(the)f(opp)r(osite.)
54 b(This)34 b(can)f(mostly)g(b)r(e)g(ac)n(hiev)n(ed)g(with)g(the)h
(NOT)515 4707 y(op)r(eration,)g(but)h(w)n(e)e(m)n(ust)h(b)r(e)g
(careful)g(to)f(p)r(erform)h(this)g(op)r(eration)f(only)g(on)h(the)g
(bits)515 4807 y(actually)f(presen)n(t)g(in)h(the)g(biname)f(\(the)i
(con)n(tainer)d(w)n(e)i(are)e(using)i(probably)e(con)n(tains)515
4907 y(more)21 b(bits\).)36 b(Th)n(us,)23 b(w)n(e)e(require)g(a)h(coun)
n(t)g(of)g(the)h(1's)e(in)i(the)f(biname)g(to)g(kno)n(w)g(the)g(length)
515 5006 y(of)34 b(the)g(en)n(tire)f(biname)h(\(whic)n(h)g(is)g(the)g
(t)n(wice)g(the)g(n)n(um)n(b)r(er)f(of)h(1's\),)h(and)f(the)g(b)r(est)g
(w)n(e)1905 5255 y(10)p eop
%%Page: 11 11
11 10 bop 515 523 a Fg(can)29 b(hop)r(e)i(for)e(is)h(an)g(O\(n\))h(op)r
(eration.)43 b(Note)30 b(that)h(with)f(this)h(represen)n(tation,)e(0)g
(is)h(an)515 623 y(in)n(v)-5 b(alid)27 b(biname;)h(w)n(e)f(mak)n(e)g
(use)g(of)h(this)f(later.)515 758 y(W)-7 b(e)40 b(can)f(concatenate)f
(binames)i(b)n(y)f(shifting)h(one)f(biname)h(b)n(y)f(the)h(n)n(um)n(b)r
(er)f(of)h(bits)515 858 y(presen)n(t)35 b(in)i(the)f(other)g(biname,)i
(and)f(OR'ing)e(\(or)h(adding\))g(the)h(binames.)62 b(The)36
b(OR)515 957 y(op)r(eration)25 b(is)i(often)g(faster)f(than)h
(addition,)g(esp)r(ecially)f(if)i(m)n(ulti-precision)e(in)n(tegers)f
(are)515 1057 y(used,)i(since)h(it)g(do)r(esn't)f(require)g(the)h(use)f
(of)h(a)f(carry)f(bit.)37 b(Concatenation)26 b(is)i(O\(1\).)515
1192 y(The)22 b(last)g(op)r(eration)g(necessary)e(is)j(the)f(smerg)g
(routine.)34 b(This)23 b(is)f(equiv)-5 b(alen)n(t)22
b(to)h(step)f(2)g(of)515 1292 y(Kidd's)32 b(BINAME2)i(algorithm,)f
(with)h(the)f(sorting)f(mo)r(di\034cation)h(men)n(tioned)g(earlier.)515
1391 y(The)20 b(smerg)g(routine)g(tak)n(es)g(as)g(input)i(a)e(list)h
(of)g(Binames,)g(sorts)f(and)g(concatenates)f(them,)515
1491 y(and)26 b(adds)h(a)f(ro)r(ot)g(to)h(the)g(biname)g(b)n(y)g
(placing)f(a)g(0)h(to)g(the)g(left)g(and)g(a)g(1)f(to)h(the)g(righ)n(t)
f(of)515 1590 y(the)i(merged)e(list.)515 1852 y Ff(4.2)112
b(Edge)37 b(class)515 2041 y Fg(The)h(edge)g(class)g(is)g(a)g(simple)h
(class,)h(used)f(for)f(represen)n(ting)f(an)h(edge.)69
b(An)39 b(edge)f(is)515 2141 y(represen)n(ted)32 b(b)n(y)i(t)n(w)n(o)f
(in)n(tegers,)h(whic)n(h)f(are)g(the)h(n)n(um)n(b)r(ers)g(of)f(the)h(v)
n(ertices)f(whic)n(h)h(the)515 2240 y(edge)g(connects.)56
b(Though)34 b(in)h(realit)n(y)e(these)i(t)n(w)n(o)e(in)n(tegers)g(w)n
(ould)h(b)r(e)h(con)n(tained)f(in)g(a)515 2340 y(set)24
b(\(since)h(w)n(e)f(are)g(using)g(undirected)h(graphs\),)f(it)h(is)f
(more)g(e\036cien)n(t)h(to)f(represen)n(t)g(them)515
2440 y(as)j(a)h(v)n(ector)e(or)h(an)h(arra)n(y)d(\(as)j(in)g(directed)g
(graphs\),)f(since)h(there)f(are)g(only)h(t)n(w)n(o)f(en)n(tries)515
2539 y(in)j(the)g(set.)43 b(Our)29 b(graphs)f(are,)h(in)h(fact,)g
(undirected)g(graphs,)f(and)g(all)g(functions)h(whic)n(h)515
2639 y(op)r(erate)c(on)i(edges)e(m)n(ust)i(tak)n(e)f(the)h(represen)n
(tation)e(in)n(to)h(accoun)n(t.)515 2901 y Ff(4.3)112
b(T)-9 b(ree)37 b(class)515 3090 y Fg(The)h(tree)f(class)g(includes)h
(t)n(w)n(o)f(t)n(yp)r(es)h(of)g(op)r(erations:)56 b(con)n(v)n(ersion)36
b(op)r(erations)h(\(con-)515 3189 y(structors)26 b(and)h(assignmen)n(t)
g(op)r(erators\),)f(and)h(comparison)f(op)r(erations.)515
3324 y(The)f(con)n(v)n(ersion)e(op)r(erations)g(create)h(a)h(tree)g
(from)f(a)h(giv)n(en)f(tree)h(or)f(from)h(a)g(list)g(of)g(edges)515
3424 y(in)j(the)g(tree.)515 3559 y(The)k(comparison)e(op)r(erations)h
(compare)f(the)j(global)e(minnames)g(of)h(the)h(t)n(w)n(o)e(trees.)50
b(If)515 3659 y(the)37 b(global)e(minnames)h(ha)n(v)n(e)f(not)i(y)n(et)
f(b)r(een)h(generated)e(\(i.e.)64 b(they)37 b(ha)n(v)n(e)e(an)h(in)n(v)
-5 b(alid)515 3759 y(v)g(alue)24 b(of)h(0\),)h(then)f(they)g(are)f
(generated)f(b)r(efore)i(pro)r(ceeding.)35 b(In)25 b(generating)e(the)i
(global)515 3858 y(minnames,)f(the)g(class)e(retains)h(a)g(map)g(from)g
(biname)h(to)f(global)f(minname)i(as)e(describ)r(ed)515
3958 y(earlier.)515 4220 y Ff(4.4)112 b(Graph)38 b(class)515
4408 y Fg(The)d(graph)f(class)g(is)h(simply)g(a)g(class)f(whic)n(h)h
(represen)n(ts)e(a)i(graph.)58 b(The)35 b(graph)f(class)515
4508 y(con)n(tains)27 b(t)n(w)n(o)h(data)f(mem)n(b)r(ers:)38
b(a)28 b(list)h(of)f(edges)g(and)g(a)g(con)n(trol)f(arra)n(y)-7
b(,)26 b(whic)n(h)i(sp)r(eci\034es)515 4608 y(whic)n(h)19
b(edges)h(m)n(ust)f(b)r(e)i(visited)f(\034rst)f(when)h(generating)e
(the)i(spanning)g(tree.)34 b(The)19 b(con)n(trol)515
4707 y(arra)n(y)i(is)i(generated)f(whenev)n(er)g(an)h(assignmen)n(t)f
(is)h(made)g(or)g(whenev)n(er)f(the)i(constructor)515
4807 y(is)31 b(called)g(\(unless)g(the)h(graph)e(is)h(created)f(with)i
(the)g(default)f(constructor\).)47 b(Th)n(us,)32 b(the)515
4907 y(caller)24 b(can)h(assume)f(that)i(the)f(con)n(trol)f(arra)n(y)f
(has)h(b)r(een)i(initialized,)g(unless)f(the)g(n)n(um)n(b)r(er)515
5006 y(of)i(edges)g(and)g(the)h(n)n(um)n(b)r(er)g(of)f(v)n(ertices)g
(in)g(the)h(graph)f(are)f(b)r(oth)i(zero.)1905 5255 y(11)p
eop
%%Page: 12 12
12 11 bop 515 523 a Ff(4.5)112 b(Span)m(tree)38 b(class)515
726 y Fg(The)e(span)n(tree)g(class)g(is)g(where)g(most)h(of)f(the)h
(logic)f(is.)64 b(The)37 b(span)n(tree)e(class)h(tak)n(es)f(a)515
826 y(graph)25 b(\(or)g(a)g(list)i(of)e(edges,)h(from)g(whic)n(h)f(it)i
(generates)d(a)i(graph\))f(as)g(input.)37 b(The)26 b(gbuild)515
925 y(routine)31 b(is)g(used)h(to)f(initialize)h(the)g(data)f
(structures)g(whic)n(h)g(are)g(used)g(to)h(tra)n(v)n(erse)d(the)515
1025 y(tree.)49 b(The)32 b(next_tree)f(routine)h(is)f(used)h(to)g
(\034nd)g(the)h(next)f(spanning)f(tree;)j(it)e(returns)515
1125 y(0)c(when)g(there)h(are)e(no)h(more)g(spanning)g(trees.)39
b(Th)n(us,)28 b(there)g(are)g(t)n(w)n(o)f(functions)i(whic)n(h)515
1224 y(can)e(b)r(e)h(used)f(to)h(\034nd)g(all)f(the)h(spanning)f
(trees:)847 1457 y(in)n(t)h(\034rst_tree\(\);)847 1556
y(in)n(t)g(next_tree\(\);)515 1789 y(This)f(class)g(is)g(essen)n
(tially)g(an)g(iterator)f(for)h(the)h(graph)f(class.)515
2071 y Ff(4.6)112 b(F)-9 b(unction)37 b(hierarc)m(h)m(y)g(of)g(the)g
(original)f(program)515 2274 y Fg(The)28 b(original)f(Maple)h(program)e
(w)n(as)h(a)h(collection)f(of)h(functions)h(whic)n(h)f(formed)g(a)g
(hier-)515 2374 y(arc)n(h)n(y)-7 b(.)51 b(There)33 b(is)f(no)h(apparen)
n(t)f(distinction)h(made)g(b)r(et)n(w)n(een)g(whic)n(h)g(data)f(t)n(yp)
r(es)h(eac)n(h)515 2473 y(function)23 b(op)r(erates)f(on;)i(moreo)n(v)n
(er,)d(the)i(hea)n(vy)f(use)h(of)g(globals)e(pro)n(vides)h(a)g(sp)r
(eed)h(b)r(o)r(ost,)515 2573 y(but)28 b(at)f(the)h(cost)f(of)h(p)r
(ossible)f(side)h(e\033ects.)873 3810 y
 currentpoint currentpoint translate 0.25804 0.25804 scale neg exch
neg exch translate
 873 3810 a @beginspecial
0 @llx 0 @lly 999 @urx 508 @ury 9990 @rwi @setspecial
%%BeginDocument: /home/cout/files/thesis//maple_diagram.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/cout/files/thesis/maple_diagram.dia
%%Creator: Dia v0.86
%%CreationDate: Thu Dec 14 23:03:28 2000
%%For: cout
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 999 508
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-0.950000 -20.850000 translate
%%EndProlog


0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 18.000000 3.000000 m 18.000000 4.800000 l 21.139200 4.800000 l 21.139200 3.000000 l f
0.000000 0.000000 0.000000 srgb
n 18.000000 3.000000 m 18.000000 4.800000 l 21.139200 4.800000 l 21.139200 3.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(Main) dup sw 2 div 19.569600 ex sub 4.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 18.500000 4.300000 m 20.639200 4.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 17.000000 7.000000 m 17.000000 8.800000 l 22.078400 8.800000 l 22.078400 7.000000 l f
0.000000 0.000000 0.000000 srgb
n 17.000000 7.000000 m 17.000000 8.800000 l 22.078400 8.800000 l 22.078400 7.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(Spantree) dup sw 2 div 19.539200 ex sub 8.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 17.500000 8.300000 m 21.578400 8.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 25.000000 7.000000 m 25.000000 8.800000 l 29.108800 8.800000 l 29.108800 7.000000 l f
0.000000 0.000000 0.000000 srgb
n 25.000000 7.000000 m 25.000000 8.800000 l 29.108800 8.800000 l 29.108800 7.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(Setctr) dup sw 2 div 27.054400 ex sub 8.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 25.500000 8.300000 m 28.608800 8.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 7.000000 7.000000 m 7.000000 8.800000 l 14.502400 8.800000 l 14.502400 7.000000 l f
0.000000 0.000000 0.000000 srgb
n 7.000000 7.000000 m 7.000000 8.800000 l 14.502400 8.800000 l 14.502400 7.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(GlobalMinname) dup sw 2 div 10.751200 ex sub 8.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 7.500000 8.300000 m 14.002400 8.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 1.000000 11.000000 m 1.000000 12.800000 l 8.017600 12.800000 l 8.017600 11.000000 l f
0.000000 0.000000 0.000000 srgb
n 1.000000 11.000000 m 1.000000 12.800000 l 8.017600 12.800000 l 8.017600 11.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(LocalMinname) dup sw 2 div 4.508800 ex sub 12.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 1.500000 12.300000 m 7.517600 12.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 8.000000 15.000000 m 8.000000 16.800000 l 11.624000 16.800000 l 11.624000 15.000000 l f
0.000000 0.000000 0.000000 srgb
n 8.000000 15.000000 m 8.000000 16.800000 l 11.624000 16.800000 l 11.624000 15.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(smerg) dup sw 2 div 9.812000 ex sub 16.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 8.500000 16.300000 m 11.124000 16.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 5.000000 19.000000 m 5.000000 20.800000 l 7.654400 20.800000 l 7.654400 19.000000 l f
0.000000 0.000000 0.000000 srgb
n 5.000000 19.000000 m 5.000000 20.800000 l 7.654400 20.800000 l 7.654400 19.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(LLT) dup sw 2 div 6.327200 ex sub 20.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 5.500000 20.300000 m 7.154400 20.300000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.569600 4.800000 m 19.539200 7.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.569600 4.800000 m 10.751200 7.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.569600 4.800000 m 27.054400 7.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 10.751200 8.800000 m 4.508800 11.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 10.751200 8.800000 m 9.812000 15.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 4.508800 12.800000 m 9.812000 15.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 9.812000 16.800000 m 6.327200 19.000000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 11.000000 12.000000 m 11.000000 13.800000 l 15.593600 13.800000 l 15.593600 12.000000 l f
0.000000 0.000000 0.000000 srgb
n 11.000000 12.000000 m 11.000000 13.800000 l 15.593600 13.800000 l 15.593600 12.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(nextree) dup sw 2 div 13.296800 ex sub 13.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 11.500000 13.300000 m 15.093600 13.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 17.000000 12.000000 m 17.000000 13.800000 l 21.108800 13.800000 l 21.108800 12.000000 l f
0.000000 0.000000 0.000000 srgb
n 17.000000 12.000000 m 17.000000 13.800000 l 21.108800 13.800000 l 21.108800 12.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(childe) dup sw 2 div 19.054400 ex sub 13.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 17.500000 13.300000 m 20.608800 13.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 22.000000 12.000000 m 22.000000 13.800000 l 26.108800 13.800000 l 26.108800 12.000000 l f
0.000000 0.000000 0.000000 srgb
n 22.000000 12.000000 m 22.000000 13.800000 l 26.108800 13.800000 l 26.108800 12.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(gbuild) dup sw 2 div 24.054400 ex sub 13.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 22.500000 13.300000 m 25.608800 13.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 27.000000 12.000000 m 27.000000 13.800000 l 31.108800 13.800000 l 31.108800 12.000000 l f
0.000000 0.000000 0.000000 srgb
n 27.000000 12.000000 m 27.000000 13.800000 l 31.108800 13.800000 l 31.108800 12.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(dumpum) dup sw 2 div 29.054400 ex sub 13.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 27.500000 13.300000 m 30.608800 13.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 32.000000 12.000000 m 32.000000 13.800000 l 36.108800 13.800000 l 36.108800 12.000000 l f
0.000000 0.000000 0.000000 srgb
n 32.000000 12.000000 m 32.000000 13.800000 l 36.108800 13.800000 l 36.108800 12.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(degseq) dup sw 2 div 34.054400 ex sub 13.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 32.500000 13.300000 m 35.608800 13.300000 l s
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 29.000000 16.000000 m 29.000000 17.800000 l 34.078400 17.800000 l 34.078400 16.000000 l f
0.000000 0.000000 0.000000 srgb
n 29.000000 16.000000 m 29.000000 17.800000 l 34.078400 17.800000 l 34.078400 16.000000 l cp s
/Helvetica-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(deciname) dup sw 2 div 31.539200 ex sub 17.094690 m gs 1 -1 sc sh gr
0.050000 slw
0.000000 0.000000 0.000000 srgb
n 29.500000 17.300000 m 33.578400 17.300000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.539200 8.800000 m 13.296800 12.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.539200 8.800000 m 19.054400 12.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.539200 8.800000 m 24.054400 12.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.539200 8.800000 m 29.054400 12.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 19.539200 8.800000 m 34.054400 12.000000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
0.000000 0.000000 0.000000 srgb
n 29.054400 13.800000 m 31.539200 16.000000 l s
showpage

%%EndDocument
 @endspecial 873 3810 a
 currentpoint currentpoint translate 1 0.25804 div 1 0.25804 div scale
neg exch neg exch translate
 873 3810 a 515 4163 a Ff(4.7)112
b(UML)38 b(diagram)f(of)g(the)h(new)f(program)515 4366
y Fg(Belo)n(w)i(is)i(a)f(UML)g(diagram)f(of)i(the)g(class)e(hierarc)n
(h)n(y)g(used)h(in)h(the)g(program.)73 b(The)515 4466
y(\035o)n(w)28 b(con)n(trol)f(is)i(essen)n(tially)f(the)h(same)f(as)h
(the)g(original)e(Maple)i(program,)e(so)h(the)h(class)515
4566 y(functions)f(ha)n(v)n(e)e(b)r(een)i(discluded)g(here)f(for)g
(readabilit)n(y)-7 b(.)1905 5255 y(12)p eop
%%Page: 13 13
13 12 bop 873 1389 a
 currentpoint currentpoint translate 0.21008 0.21008 scale neg exch
neg exch translate
 873 1389 a @beginspecial 0 @llx
0 @lly 1227 @urx 542 @ury 12270 @rwi @setspecial
%%BeginDocument: /home/cout/files/thesis//thesis-uml.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/cout/files/thesis/thesis-uml.dia
%%Creator: Dia v0.86
%%CreationDate: Thu Dec 14 23:14:51 2000
%%For: cout
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 1227 542
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-3.950000 -27.050000 translate
%%EndProlog


0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 4.000000 8.000000 m 4.000000 9.400000 l 22.737600 9.400000 l 22.737600 8.000000 l f
0.000000 0.000000 0.000000 srgb
n 4.000000 8.000000 m 4.000000 9.400000 l 22.737600 9.400000 l 22.737600 8.000000 l cp s
/Helvetica-Bold-latin1 ff 1.000000 scf sf
0.000000 0.000000 0.000000 srgb
(Biname) dup sw 2 div 13.368800 ex sub 9.000000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 4.000000 9.400000 m 4.000000 10.400000 l 22.737600 10.400000 l 22.737600 9.400000 l f
0.000000 0.000000 0.000000 srgb
n 4.000000 9.400000 m 4.000000 10.400000 l 22.737600 10.400000 l 22.737600 9.400000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(-i: Integer) 4.150000 10.094690 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 25.000000 8.000000 m 25.000000 9.400000 l 43.252800 9.400000 l 43.252800 8.000000 l f
0.000000 0.000000 0.000000 srgb
n 25.000000 8.000000 m 25.000000 9.400000 l 43.252800 9.400000 l 43.252800 8.000000 l cp s
/Helvetica-Bold-latin1 ff 1.000000 scf sf
0.000000 0.000000 0.000000 srgb
(Edge) dup sw 2 div 34.126400 ex sub 9.000000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 25.000000 9.400000 m 25.000000 10.400000 l 43.252800 10.400000 l 43.252800 9.400000 l f
0.000000 0.000000 0.000000 srgb
n 25.000000 9.400000 m 25.000000 10.400000 l 43.252800 10.400000 l 43.252800 9.400000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+e: int[2]) 25.150000 10.094690 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 4.000000 14.000000 m 4.000000 15.400000 l 24.676800 15.400000 l 24.676800 14.000000 l f
0.000000 0.000000 0.000000 srgb
n 4.000000 14.000000 m 4.000000 15.400000 l 24.676800 15.400000 l 24.676800 14.000000 l cp s
/Helvetica-Bold-latin1 ff 1.000000 scf sf
0.000000 0.000000 0.000000 srgb
(Tree) dup sw 2 div 14.338400 ex sub 15.000000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 4.000000 15.400000 m 4.000000 20.400000 l 24.676800 20.400000 l 24.676800 15.400000 l f
0.000000 0.000000 0.000000 srgb
n 4.000000 15.400000 m 4.000000 20.400000 l 24.676800 20.400000 l 24.676800 15.400000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+child: vector<list<int> >) 4.150000 16.094690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+heap: vector<int>) 4.150000 16.894690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+parent: vector<int>) 4.150000 17.694690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+n: int) 4.150000 18.494690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+name: Biname) 4.150000 19.294690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+minname_table: map<Biname, Biname>) 4.150000 20.094690 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 26.000000 15.000000 m 26.000000 16.400000 l 47.161600 16.400000 l 47.161600 15.000000 l f
0.000000 0.000000 0.000000 srgb
n 26.000000 15.000000 m 26.000000 16.400000 l 47.161600 16.400000 l 47.161600 15.000000 l cp s
/Helvetica-Bold-latin1 ff 1.000000 scf sf
0.000000 0.000000 0.000000 srgb
(Graph) dup sw 2 div 36.580800 ex sub 16.000000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 26.000000 16.400000 m 26.000000 19.800000 l 47.161600 19.800000 l 47.161600 16.400000 l f
0.000000 0.000000 0.000000 srgb
n 26.000000 16.400000 m 26.000000 19.800000 l 47.161600 19.800000 l 47.161600 16.400000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+edges: vector<Edge>) 26.150000 17.094690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+ctr: vector<vector<list<int> > >) 26.150000 17.894690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+num_edges: int) 26.150000 18.694690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+num_nodes: int) 26.150000 19.494690 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
1.000000 1.000000 1.000000 srgb
n 27.000000 23.000000 m 27.000000 24.400000 l 44.768000 24.400000 l 44.768000 23.000000 l f
0.000000 0.000000 0.000000 srgb
n 27.000000 23.000000 m 27.000000 24.400000 l 44.768000 24.400000 l 44.768000 23.000000 l cp s
/Helvetica-Bold-latin1 ff 1.000000 scf sf
0.000000 0.000000 0.000000 srgb
(Spantree) dup sw 2 div 35.884000 ex sub 24.000000 m gs 1 -1 sc sh gr
1.000000 1.000000 1.000000 srgb
n 27.000000 24.400000 m 27.000000 27.000000 l 44.768000 27.000000 l 44.768000 24.400000 l f
0.000000 0.000000 0.000000 srgb
n 27.000000 24.400000 m 27.000000 27.000000 l 44.768000 27.000000 l 44.768000 24.400000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+f: vector<int>) 27.150000 25.094690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+g: vector<vector<int> >) 27.150000 25.894690 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
0.000000 0.000000 0.000000 srgb
(+graph: Graph) 27.150000 26.694690 m gs 1 -1 sc sh gr
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 13.368800 10.400000 m 13.368800 12.000000 l 14.338400 12.000000 l 14.338400 14.000000 l s
[] 0 sd
0 slj
0 slc
1.000000 1.000000 1.000000 srgb
n 14.338400 14.000000 m 14.098400 13.300000 l 14.338400 12.600000 l 14.578400 13.300000 l f
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 14.338400 14.000000 m 14.098400 13.300000 l 14.338400 12.600000 l 14.578400 13.300000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 34.126400 10.400000 m 34.126400 12.000000 l 14.338400 12.000000 l 14.338400 14.000000 l s
[] 0 sd
0 slj
0 slc
1.000000 1.000000 1.000000 srgb
n 14.338400 14.000000 m 14.098400 13.300000 l 14.338400 12.600000 l 14.578400 13.300000 l f
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 14.338400 14.000000 m 14.098400 13.300000 l 14.338400 12.600000 l 14.578400 13.300000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 34.126400 10.400000 m 34.126400 12.000000 l 36.580800 12.000000 l 36.580800 15.000000 l s
[] 0 sd
0 slj
0 slc
1.000000 1.000000 1.000000 srgb
n 36.580800 15.000000 m 36.340800 14.300000 l 36.580800 13.600000 l 36.820800 14.300000 l f
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 36.580800 15.000000 m 36.340800 14.300000 l 36.580800 13.600000 l 36.820800 14.300000 l cp s
/Courier-latin1 ff 0.800000 scf sf
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 36.580800 19.800000 m 36.580800 21.000000 l 35.884000 21.000000 l 35.884000 23.000000 l s
[] 0 sd
0 slj
0 slc
1.000000 1.000000 1.000000 srgb
n 35.884000 23.000000 m 35.644000 22.300000 l 35.884000 21.600000 l 36.124000 22.300000 l f
0.100000 slw
[] 0 sd
0 slj
0 slc
0.000000 0.000000 0.000000 srgb
n 35.884000 23.000000 m 35.644000 22.300000 l 35.884000 21.600000 l 36.124000 22.300000 l cp s
/Courier-latin1 ff 0.800000 scf sf
showpage

%%EndDocument
 @endspecial 873 1389 a
 currentpoint currentpoint translate 1 0.21008 div 1 0.21008 div scale
neg exch neg exch translate
 873 1389 a 515 1770 a Fi(5)131
b(Conclusions)515 1992 y Fg(Initial)36 b(tests)g(sho)n(w)f(that)i(the)f
(new)h(C++)e(program)f(app)r(ears)h(to)h(run)g(appro)n(ximately)515
2091 y(1000)25 b(times)j(faster)f(than)h(the)g(original)e(Maple)h
(program.)35 b(This)27 b(is)h(probably)e(due)i(to:)616
2290 y(1.)41 b(Changing)27 b(from)g(an)g(in)n(terpreted)g(language)f
(to)i(a)f(compiled)g(language,)616 2446 y(2.)41 b(Using)28
b(b)r(etter)g(data)f(structures)f(to)i(represen)n(t)e(the)i(binames,)f
(and)616 2602 y(3.)41 b(Using)28 b(a)f(table)g(to)h(cac)n(he)e(the)i
(minnames)515 2800 y(Because)g(of)i(the)f(new)h(co)r(de)f
(organization,)f(the)i(new)f(co)r(de)h(is)f(more)g(main)n(tainable)f
(and)515 2900 y(easier)k(to)h(read)g(and)g(understand.)54
b(This)33 b(is)h(a)f(purely)g(sub)5 b(jectiv)n(e)33 b(measuremen)n(t,)g
(but)515 2999 y(could)27 b(easily)g(b)r(e)h(demonstrated.)515
3310 y Fi(6)131 b(F)-11 b(urther)44 b(Researc)l(h)515
3531 y Fg(The)26 b(algorithm)g(that)g(the)h(program)e(uses)h(to)g
(generate)f(the)i(spanning)f(trees)g(of)g(a)g(graph)515
3631 y(ma)n(y)19 b(b)r(e)i(sub)r(optimal.)34 b(This)21
b(is)f(b)r(ecause)g(it)g(op)r(erates)f(on)h(the)h(edges)e(of)i(the)f
(graph)f(instead)515 3731 y(of)j(on)g(the)h(v)n(ertices)f(of)g(the)h
(graph)e(\(the)j(edges)d(can)h(gro)n(w)f(exp)r(onen)n(tially)h(with)h
(resp)r(ect)f(to)515 3830 y(the)29 b(v)n(ertices\).)40
b(It)29 b(w)n(ould)f(b)r(e)i(an)e(in)n(teresting)g(problem)h(to)f(see)h
(if)g(there)g(is)f(a)h(signi\034can)n(t)515 3930 y(di\033erence)e(in)h
(sp)r(eed)g(with)g(a)f(more)g(adv)-5 b(anced)27 b(algorithm.)515
4070 y(A)n(dditionally)-7 b(,)33 b(there)f(ma)n(y)f(b)r(e)i(a)f(sp)r
(eedup)g(in)h(generating)e(the)h(global)f(minnames;)k(the)515
4169 y(ro)r(ot)26 b(of)g(the)i(global)d(min)n(tree)i(can)f(b)r(e)h
(found)g(using)g(a)f(searc)n(h,)f(whic)n(h)i(means)f(only)h(some)515
4269 y(of)32 b(the)g(minnames)f(need)h(to)g(b)r(e)g(generated.)49
b(Because)31 b(this)h(w)n(ould)f(impact)h(the)g(use)g(of)515
4368 y(the)j(table)g(whic)n(h)g(cac)n(hes)f(the)h(minnames,)i(it)f(is)e
(not)h(immediately)h(ob)n(vious)d(whether)515 4468 y(this)28
b(w)n(ould)f(pro)n(vide)f(a)h(signi\034can)n(t)g(increase.)515
4608 y(Lastly)-7 b(,)29 b(there)f(is)h(m)n(uc)n(h)g(that)g(can)g(b)r(e)
h(done)e(to)h(impro)n(v)n(e)f(on)g(the)i(program's)d(structure.)515
4707 y(The)33 b(con)n(trol)g(structure)g(in)g(the)h(graph)f(class)f(w)n
(ould)i(b)r(e)g(m)n(uc)n(h)f(b)r(etter)h(suited)g(for)f(the)515
4807 y(span)n(tree)25 b(class.)35 b(The)27 b(tree)f(class)f(w)n(ould)h
(probably)f(do)i(w)n(ell)f(to)g(inherit)g(from)g(the)h(graph)515
4907 y(class,)43 b(as)d(a)g(tree)h(is)g(a)f(t)n(yp)r(e)h(of)g(graph.)75
b(The)41 b(span)n(tree)f(class)g(should)g(probably)g(b)r(e)515
5006 y(implemen)n(ted)28 b(as)f(a)g(C++)g(iterator.)1905
5255 y(13)p eop
%%Page: 14 14
14 13 bop 515 523 a Fi(References)515 738 y Fg([1])41
b(Kreher,)23 b(Donald)g(L.)h(and)f(Douglas)f(R.)i(Stinson.)g
Fe(Combinatorial)k(A)n(lgorithms)p Fg(.)c(CR)n(C)644
838 y(Press,)j(Bo)r(ca)g(Raton:)36 b(1998.)515 1004 y([2])41
b(Aho,)30 b(Alfred)g(V.,)g(John)g(E.)g(Hop)r(croft,)g(and)f(Je\033rey)g
(D.)h(Ullman.)g Fe(The)j(Design)e(and)644 1103 y(A)n(nalysis)45
b(of)h(Computer)g(A)n(lgorithms)p Fg(.)f(A)n(ddison-W)-7
b(esley)43 b(Publishing)i(Compan)n(y)-7 b(,)644 1203
y(1974.)515 1369 y([3])41 b(Kap)r(o)r(or,)32 b(Sanjiv)h(and)g(H.)g
(Ramesh.)f Fe(A)n(lgorithms)j(for)h(Enumer)l(ating)e(al)t(l)h(Sp)l
(anning)644 1469 y(T)-6 b(r)l(e)l(es)40 b(of)g(Undir)l(e)l(cte)l(d)g
(and)h(W)-6 b(eighte)l(d)40 b(Gr)l(aphs)p Fg(.)g(SIAM)g(Journal)d(on)h
(Computing,)644 1568 y(V)-7 b(ol.)27 b(24,)g(No.)h(2.)f(pp.)h(246-265.)
515 1734 y([4])41 b(T.)k(Matsui.)f(\020Algorithms)g(for)g(\034nding)h
(all)f(the)h(spanning)f(trees)g(in)h(undirected)644 1834
y(graphs.\021)26 b(Rep)r(ort)21 b(METR93-08,)f(Departmen)n(t)h(of)g
(Mathematical)f(Engineering)g(and)644 1934 y(Information)27
b(Ph)n(ysics,)g(F)-7 b(acult)n(y)27 b(of)h(Engineering,)f(Univ)n(ersit)
n(y)f(of)i(T)-7 b(oky)n(o,)26 b(1993.)515 2100 y([5])41
b(GM78)27 b(H.N.)h(Gab)r(o)n(w)e(and)h(E.W.)i(My)n(ers.)d(Finding)h
(all)h(spanning)e(trees)h(of)g(directed)644 2199 y(and)g(undirected)h
(trees.)f Fe(SIAM)i(Journal)h(of)h(Computing)p Fg(,)d(7:280\025287,)c
(1978.)515 2365 y([6])41 b(\020Lex)27 b(Ordering,)f(Notes)h(b)n(y)g(R.)
h(Jamison.\021)33 b(Jan.)27 b(5,)g(1999.,)f(p.)i(1.)515
2531 y([7])41 b(GJ)20 b(Min)n(t)n(y)-7 b(,)23 b Fe(A)g(simple)h
(algorithm)h(for)f(listing)g(al)t(l)h(the)e(tr)l(e)l(es)g(of)h(a)g(gr)l
(aph)p Fg(,)g(IEEE)e(T)-7 b(rans.)644 2631 y(Circuit)27
b(Theory)-7 b(,)27 b(CT-12)f(\(1965\))g(,)i(p.)g(120.)515
2797 y([8])41 b(R)n(C)25 b(Read)h(and)f(RE)h(T)-7 b(arjan.)25
b Fe(Bounds)j(on)g(b)l(acktr)l(ack)h(algorithms)g(for)g(listing)g
(cycles,)644 2897 y(p)l(aths,)i(and)f(sp)l(anning)g(tr)l(e)l(es)p
Fg(,)d(Net)n(w)n(orks)f(5\(1975\),)g(pp.)h(237-252.)515
3063 y([9])41 b(Kidd,)24 b(T)-7 b(ra)n(vis)21 b(D.)i(\020Naming)g(the)g
(T)-7 b(rees)22 b(in)h(the)g(F)-7 b(orest\021)29 b(\(Master's)22
b(Thesis\).)h(Depart-)644 3162 y(men)n(t)28 b(of)f(Mathematical)g
(Sciences,)g(Clemson)h(Univ)n(ersit)n(y)-7 b(,)26 b(1998.)1905
5255 y(14)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
