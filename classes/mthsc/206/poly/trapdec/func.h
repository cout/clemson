/* COPYRIGHT - Dimitrios Gunopulos, Princeton University, 1994 */
int eq(float, float);
int samepoint(Vertex, Vertex);
int order(Vertex,Vertex,Vertex);
float length(Vertex,Vertex);
float distance(Vertex,Vertex,Vertex);
int colinear(Vertex, Vertex, Vertex);
int turn(Vertex,Vertex,Vertex);
int ccw(Vertex,Vertex,Vertex);
float max(float, float);
float min(float, float);
int ecomp(float, float);
float edxposition(EdgeL, float, int *);
float edxposition2(EdgeL, float);
int sameedges(EdgeL, EdgeL);
int eet(EdgeL, TrapezoidL, int *, int *);
TrapezoidL nexttrap(TrapezoidL, EdgeL, int);

void starttime();
long endtime();
int phaseno(int);
int edgesinface(int, int);
void edgestophases(int, int *);
Vertex makeVertex();
VertexL makeVertexL();
EdgeL makeEdgeL();
TrapezoidL makeTrapezoidL();
Region makeRegion();
void makephases(EdgeL, int);
int readfile(char *,Vertex);
Vertex readinputvertex(int *);
EdgeL makeedges(int, Vertex);
int checkcrossings(int, Vertex);
int checkycoords(int ,Vertex);
SVertex makevtarray (int, EdgeL);
Region makefirstregion(Region, EdgeL);
Region makefirstregion1(Region, EdgeL);
void quicksort(int, int, SVertex);
int consec(EdgeL, EdgeL, float, Region);
void findtraps(Region);
void givetrapno();

Vertex makepoly(int);
void reporttrap(TrapezoidL, int);
void reporttraps(TrapezoidL, int, int);
void reportintraps(TrapezoidL, int);
void reportalltraps(TrapezoidL, int);
void cleanup(TrapezoidL);
void trapsintraps(TrapezoidL);
int mergetwotraps(TrapezoidL, TrapezoidL, int);
void puttogether(TrapezoidL);
void mergetraps(Region);
void makeregion(TrapezoidL);
void edgesinregions(Region, EdgeL, int, int);
void outputtraps(TrapezoidL,int, int);

TrapezoidL trap_dec( int, Vertex);
TrapezoidL trap_dec_log( int, Vertex);
Treeroot init_rbtree(int);
Treenode tree_locate(Treeroot, EdgeL);
Treenode tree_insert(Treeroot, EdgeL);
void tree_delete(Treeroot, EdgeL);
void destroy_rbtree(Treeroot);
void print_tree(Treeroot);
void print_table(Treeroot);
