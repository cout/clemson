{\rtf1\ansi\ansicpg1252\deff0
{\fonttbl
{\f0\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f1\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f2\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f3\fnil\fcharset0\fprq0\fttruetype Times New Roman;}
{\f4\fnil\fcharset0\fprq0\fttruetype Times New Roman;}}
{\colortbl
\red0\green0\blue0;}
\kerning0\cf0\viewkind1\paperw12240\paperh15840\margl1440\margr1440\widowctl
\sectd\sbknone\colsx360
\pard{\f0 1) An explanation of three distinct OS security violations in which unauthorized access was gained (preferably these should be incidents in which protected mode of the OS was entered).  These explanations should be derived from news or computing literature accounts in which the specific OS and OS component(s) involved are fully identified.  That is, I don't want to see a list of generic terms like "someone sometime somewhere used a Trojan horse which..." -- instead; I want to see the details of three specific incidents.}
\par\pard\sl240\slmult1
\par\pard\sl240\slmult1{\f1 2) One-to-two paragraphs on CERT (http://www.cert.org/)}
\par\pard\sl240\slmult1
\par\pard\sl240\slmult1{\f1 3) Extra credit.  Describe what the US and Chinese military are doing in preparation for information wars.}
\par\pard\sl240\slmult1
\par\pard\sl480\slmult1{\f2\tab Jane was just a college student.  She had very little knowledge of computers, though her job required her to use a word processor and a spreadsheet.  It was an ordinary day on campus; Jane had finished with classes, and had returned to her room to type an essay.  Before doing so, she had decided to check her housing status, as the dorm assignments for the entire campus had just been released earlier that morning.  She fired up her web browser, directed it to the housing page, typed in her social security number, and up came her assignment.}
\par\pard\sl480\slmult1{\f2\tab What Jane did not know was that somewhere else on the network was a mischevious hacker who was sniffing packets.  Just trying to impress his girlfriend with his "1337 skillz," he had downloaded a program which allowed him to see every bit of data going across the network.  This particular version had the ability to parse data rapidly and sort it into categories.  Immediately, he saw a new category appear on his screen: "social security numbers."  The hacker now had access to all of Jane's personal data, class information, credit card information, and much more.  He only needs her name to go with the number, but that's easy, since he has her ethernet address, and a few more hours of sniffing should turn up a name.}
\par\pard\sl480\slmult1{\f2\tab One might expect that a person like Jane shouldn't have to know anything about computer security.  But despite what one might think, computer security is an issue that affects each and every one of us.  Had Jane known to check whether her connection was encrypted, she might have thought twice about going down to the housing office to get her assignment instead.  There are many other issues that affect normal, ordinary people.  There are also issues that ordinary people need not know about, but a good system administrator can usually thwart hackers that get in this way.  Statistics show that most hacking is done on the inside or by using someone who doesn't know much about security.}
\par\pard\sl480\slmult1{\f2\tab It was a normal evening for universities in America; people were out partying in celebration of an early weekend, students were preparing for defenses for their theses, and system administrators were fighting off a computer epidemic.  A special event in the history of computer security has made November 3, 1988 into what we now call "Black Thursday."  All over the world, people were noticing strange effects on their computers.  One machine at the University of Utah, normally almost idle at 9pm, had a load average of 5 (a load average of 20 makes the computer almost unusable).  Processes were appearing at an alarming rate, and within a matter of hours, the load average had reached a peak.  Andy Sudduth, of Harvard University, figured out what was going on, and posted a message to the TCP-IP mailing list, saying, "there may be a virus loose on the Internet."  Ironically, his message was blocked at relay.cs.net while the machine had been shut down to combat the worm.}
\par\pard\sl480\slmult1{\f2\tab The Internet Worm, as it has come to be known as, was an eye-opening event for the security community.  Robert Morris, son of the former head of the NSA, authored the program while a student at Cornell University, and was found to have caused damages of almost $100,000 across the United States.  The program was originally just an experiment, but due to a bug in the software, it escalated to an epidemic.  While the security holes which allowed the program through have since been patched, the fundamental flaws that led to these security holes still remain.}
\par\pard\sl480\slmult1{\f2\tab The worm had three methods of attack: rsh/rexec, fingerd, and sendmail.  The first method was by far the most successful, and is a problem that still has not been dealt with.  The worm began by collecting the password file, then trying a series of 400 common passwords until an account had been broken.  This allowed the worm to write a .rhosts and a .forward file to the users home directory, granting the worm access to any other machines the user had rights on.}
\par\pard\sl480\slmult1{\f2\tab The second flaw was a bug in the finger daemon.  Though the bug was present on both the Sun 3's and the VAX machines that the bug targeted, only the VAX machines were found to have been breached by this method.  The worm made use of what is known as a }{\f3\i buffer overflow}{\f4 , an exploit that has only in the past two years really been dealt with (almost all current operating systems disallow execution of code in the data segment, which means that a program will segfault rather than executing arbitrary code).  The finger daemon used a C library function called gets, which used a 512 byte buffer for its data.  The worm simply sent a 536 byte packet to the finger daemon, causing it to crash.  When it did so, the extra 24 bytes contained code which caused the finger daemon, upon return from the gets call, to make a jump into the data buffer itself, which, in turn, contained code to execute a shell.  Though the finger daemon does not have to run as root, a process running as root (such as a mail server) would have returned a root shell -- and provided the worm with access to the entire machine.}
\par\pard\sl480\slmult1{\f4\tab If the worm didn't get in with rsh or with finger, then it tried a third method, this one a sendmail exploit.  Sendmail is a program that delivers mail to the proper destination, and has been shown time and time again that it is not secure.  In this case, the original author of sendmail had intentionally left a backdoor, hoping no one would notice.  Robert Morris did notice, though, and his worm   The worm put sendmail into a special debug mode, then sending mail to a process, using cleverly-crafted mail headers.  This gave the worm a root shell, which allowed it to further replicate.  According to Eric Allman, "the trap door resulted from two distinct 'features,' that, although innocent by themselves, were deadly when combined (kind of like binary nerve gas)."}
\par\pard\sl480\slmult1{\f4\tab The problem with the worm was that it did not make any attempt to detect which machines it had already infected, and so it would infect machines over and over, until the machine was crippled.  Though the worm was not destructive, a few minor modifications to the worm's code would have allowed it to delete files, save and transmit the passwords it had cracked for later use, or even to place a backdoor into the systems it infected, which could also be kept hidden for later use.  Another worm appeared on the internet a year later which did do some of these things, though the epidemic was not nearly as gruesome.}
\par\pard\sl480\slmult1{\f4\tab More recent attacks have not been worm attacks, but have been large-scale "denial of service" or DoS attacks.  These attacks involve utilizing holes on a large number of systems across the world to attack a single network or machine.  There is no reason why a user with enough compromised accounts would be unable to initiate a wide-scale DoS attack that would bring the internet to its knees.  Moreover, sites like rootshell.com and patcketstorm.secuify.com have made doing so just a matter of a days work.  People known as }{\f3\i script kiddies}{\f4 , people who use others' scripts to hack systems, without any real understanding of what is going on, can simply go to a website, download a small program, and infect a large number of systems in a small amount of time.  Programs like Back Orifice 2000 and others even provide a graphical interface, while attempting to disguise themselves as system administration tools.}
\par\pard\sl480\slmult1{\f4\tab Some of the first rounds of specialized DoS attacks involved Windows machines.  Earlier attacks simply ate bandwidth via spoofed ping floods, but a program known as winnuke changed the face of DoS.  Essentially, winnuke allowed someone to bring down a Windows system with just a few packets.  The program would connect to port 139 of a machine, send an }{\f3\i out of band}{\f4  packet to the machine, resulting in a blue screen of doom (BSOD) and a corrupted IP stack.  Later DoS attacks involved larger numbers of machines, and generally involved sending oversized, undersized, or malformed packets.  Such DoS programs included sping, ssping, boink, latierra, and nestea were developed in the following two years.  These programs could bring down a large variety of machines, from routers to desktop machines.  Most of these, however, were easily patchable, and some were even traceable.  On October 11, 1997, a program called smurf was released to the general public, which allowed ICMP packets to be spoofed.  The problem here is that there are numerous networks on the Internet which act as packet amplifiers; a spoofed packet appearing to come from one machine can be sent to such an amplifier, which then returns many more packets to the machine it thinks the ping request came from.  Some amplifier networks have been known to multiply a single packet into 65,000 separate packets!}
\par\pard\sl480\slmult1{\f2\tab Not too long ago, someone realized just how powerful such an attack could be  A rash of denial of service attacks ensued.  Large sites such as CNN, Yahoo, Ebay, Amazon.com, and Excite were targets of these attacks.  The attacks used a number of different methods, including smurf, distributed syn floods, and a specialized attack called stream, aimed specifically at routers.  This third method, much more recent than others, is believed to have been the primary reason for Yahoo's troubles; it involves sending an acknowledgment to a router without the router's request for such an acknowledgment, resulting in a crash.  The attack was accompanied by large amounts of mock traffic, presumably to disguise the real source of the attack.}
\par\pard\sl480\slmult1{\f2\tab This isn't the end of our troubles.  We have no guards in place to keep a distributed DoS attack from happening again.  The National Infrastructure Protection Center, an arm of the FBI dealing with computer security, has claimed to have found many "tribal flood" programs planted on computers around the Internet, waiting to be sent a signal to wake up.  Such programs make use of remote procedure calls,  which allows them to adapt as the community adapts.  This is a system that needs to be fixed before things get worse.}
\par\pard\sl480\slmult1{\f2\tab There are even some attacks that we can do nothing about.  A new round of attacks will soon begin, but this batch is much different than the previous attacks.  While traditionally, hackers have worked from the outside to gain access to the inside, hackers are now beginning to get jobs at the location they desire to hack.  A recent case involves a "white hat" -- someone who does work in computer security legally.  It is thought that the man involved used inside information to gain passwords used in an attack that occurred during the spring of 1998.  In this case the potential prize is much greater -- a good hacker could succeed where Aldrich Ames failed.  There is no telling how many hackers -- "black hats" in disguise -- have infiltrated information-seeking agencies and other security-related organizations.}
\par\pard\sl480\slmult1{\f2\tab So what is being done to thwart these attacks, and to keep hackers in their place?  In November of 1998, not long after Morris's worm caused its havoc, CERT was formed.  Unofficially the "Computer Emergency Response Team" (but offically nothing at all), CERT releases information from time to time on current security information.  Unfortunately, the CERT team has been unable to keep up with computer security as well in recent years as they have in the past.  It is other resources, such as Bugtraq, a moderated mailing list on computer security, which have been the first place that people have received their information on security holes.  Security Focus also sends out weekly emails which include bugtraq summaries and incident reports.}}